Index: app/src/main/java/com/fidoo/user/cartview/activity/CartActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fidoo.user.cartview.activity\r\n\r\nimport android.Manifest\r\nimport android.app.Activity\r\nimport android.app.Dialog\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.graphics.drawable.Drawable\r\nimport android.location.LocationManager\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.provider.Settings\r\nimport android.text.TextUtils\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProviders\r\nimport androidx.lifecycle.observe\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.room.Room\r\nimport com.android.volley.Request\r\nimport com.android.volley.Response\r\nimport com.android.volley.toolbox.StringRequest\r\nimport com.android.volley.toolbox.Volley\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.DataSource\r\nimport com.bumptech.glide.load.engine.GlideException\r\nimport com.bumptech.glide.request.RequestListener\r\nimport com.bumptech.glide.request.target.Target\r\nimport com.fidoo.user.BuildConfig\r\nimport com.fidoo.user.R\r\nimport com.fidoo.user.activity.MainActivity\r\nimport com.fidoo.user.activity.MainActivity.Companion.addCartTempList\r\nimport com.fidoo.user.activity.MainActivity.Companion.checkAddressSavedFromWhichActivity\r\nimport com.fidoo.user.activity.MainActivity.Companion.handleTrackScreenOrderSuccess\r\nimport com.fidoo.user.activity.MainActivity.Companion.onBackpressHandle\r\nimport com.fidoo.user.activity.SplashActivity\r\nimport com.fidoo.user.addressmodule.activity.NewAddAddressActivityNew\r\nimport com.fidoo.user.addressmodule.activity.SavedAddressesActivityNew\r\nimport com.fidoo.user.addressmodule.adapter.AddressesAdapterBottom\r\nimport com.fidoo.user.addressmodule.model.GetAddressModel\r\nimport com.fidoo.user.addressmodule.viewmodel.AddressViewModel\r\nimport com.fidoo.user.cartview.adapter.CartItemsAdapter\r\nimport com.fidoo.user.cartview.adapter.DeliveryChargesAdapter\r\nimport com.fidoo.user.cartview.adapter.PrescriptionAdapter\r\nimport com.fidoo.user.cartview.model.CartModel\r\nimport com.fidoo.user.cartview.roomdb.database.PrescriptionDatabase\r\nimport com.fidoo.user.cartview.roomdb.entity.PrescriptionViewEntity\r\nimport com.fidoo.user.cartview.viewmodel.CartViewModel\r\nimport com.fidoo.user.constants.useconstants\r\n\r\nimport com.fidoo.user.constants.useconstants.navigateFromCart\r\nimport com.fidoo.user.constants.useconstants.navigateFromNewAddressActivity\r\nimport com.fidoo.user.dashboard.viewmodel.HomeFragmentNewViewModel\r\nimport com.fidoo.user.data.model.*\r\nimport com.fidoo.user.data.session.SessionTwiclo\r\nimport com.fidoo.user.grocery.activity.GroceryItemsActivity.Companion.onresumeHandle\r\nimport com.fidoo.user.grocery.roomdatabase.database.ProductsDatabase\r\nimport com.fidoo.user.grocerynewui.activity.GroceryNewUiActivity.Companion.product_valueUpdate\r\nimport com.fidoo.user.interfaces.AdapterClick\r\nimport com.fidoo.user.interfaces.AdapterCustomRadioClick\r\nimport com.fidoo.user.newRestaurants.activity.NewStoreItemsActivity.Companion.handleRes\r\nimport com.fidoo.user.ordermodule.ui.NewOrderTrackModule.ui.NewTrackOrderActivity\r\nimport com.fidoo.user.ordermodule.viewmodel.TrackViewModel\r\nimport com.fidoo.user.profile.ui.EditProfileActivity\r\nimport com.fidoo.user.restaurants.activity.StoreItemsActivity.Companion.handleresponce\r\nimport com.fidoo.user.restaurants.adapter.StoreCustomItemsAdapter\r\nimport com.fidoo.user.restaurants.listener.CustomCartPlusMinusClick\r\nimport com.fidoo.user.restaurants.model.CustomCheckBoxModel\r\nimport com.fidoo.user.restaurants.model.CustomListModel\r\nimport com.fidoo.user.restaurants.model.CustomizeProductResponseModel\r\nimport com.fidoo.user.restaurants.model.StoreDetailsModel\r\nimport com.fidoo.user.restaurants.roomdatabase.database.RestaurantProductsDatabase\r\nimport com.fidoo.user.restaurants.viewmodel.StoreDetailsViewModel\r\nimport com.fidoo.user.services.OrderBackgroundgService\r\nimport com.fidoo.user.store.activity.StoreListActivity\r\nimport com.fidoo.user.user_tracker.viewmodel.UserTrackerViewModel\r\nimport com.fidoo.user.utils.AUTOCOMPLETE_REQUEST_CODE\r\nimport com.fidoo.user.utils.BaseActivity\r\nimport com.fidoo.user.utils.FORADDRESS_REQUEST_CODE\r\nimport com.fidoo.user.utils.showAlertDialog\r\nimport com.github.dhaval2404.imagepicker.ImagePicker\r\nimport com.google.android.material.bottomsheet.BottomSheetBehavior\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport com.google.gson.Gson\r\nimport com.mixpanel.android.mpmetrics.MixpanelAPI\r\nimport com.premsinghdaksha.startactivityanimationlibrary.AppUtils\r\nimport com.razorpay.Checkout\r\nimport com.razorpay.PaymentData\r\nimport com.razorpay.PaymentResultListener\r\nimport com.razorpay.PaymentResultWithDataListener\r\nimport kotlinx.android.synthetic.main.activity_cart.*\r\nimport kotlinx.android.synthetic.main.activity_cart.backIcon\r\nimport kotlinx.android.synthetic.main.activity_cart.bottom_sheet\r\nimport kotlinx.android.synthetic.main.activity_cart.customAddBtn\r\nimport kotlinx.android.synthetic.main.activity_cart.customItemsRecyclerview\r\nimport kotlinx.android.synthetic.main.activity_cart.linear_progress_indicator\r\nimport kotlinx.android.synthetic.main.activity_cart.tv_coupon\r\nimport kotlinx.android.synthetic.main.new_deliverycharges_layout.*\r\nimport kotlinx.android.synthetic.main.no_internet_connection.*\r\nimport okhttp3.MediaType.Companion.toMediaTypeOrNull\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody\r\nimport org.json.JSONObject\r\nimport java.io.File\r\nimport java.math.RoundingMode\r\nimport java.text.DecimalFormat\r\nimport kotlinx.android.synthetic.main.activity_cart.new_delivery_popup as new_delivery_popup1\r\n\r\n@Suppress(\"DEPRECATION\")\r\nclass CartActivity : BaseActivity(), CartItemsAdapter.AdapterCartAddRemoveClick, AdapterClick, CustomCartPlusMinusClick, AdapterCustomRadioClick, PaymentResultListener, PaymentResultWithDataListener {\r\n\tprivate var fixedAddressViewModel: HomeFragmentNewViewModel? = null\r\n\tvar viewmodel: CartViewModel? = null\r\n\tvar totalAmount: Double = 0.0\r\n\tvar storeViewModel: StoreDetailsViewModel? = null\r\n\tvar addressViewModel: AddressViewModel? = null\r\n\tvar finalPrice: Double = 0.0\r\n\tlateinit var behavior: BottomSheetBehavior<LinearLayout>\r\n\tprivate var categoryy: ArrayList<CustomListModel>? = null\r\n\tprivate var mModelDataTemp: CustomizeProductResponseModel? = null\r\n\tvar customIdsList: ArrayList<String>? = null\r\n\tvar customIdsListTemp: ArrayList<CustomCheckBoxModel>? = null\r\n\tvar arraylist: ArrayList<PrescriptionViewEntity>? = null\r\n\tvar totalAmountWithouttax: Double = 0.0\r\n\tvar noOfItems: Int = 0\r\n\tvar tempProductId: String? = \"\"\r\n\tvar product_id: String? = \"\"\r\n\tvar storeId: String? = \"\"\r\n\tvar tempOfferPrice: String? = \"\"\r\n\tvar filePathTemp: String = \"\"\r\n\tvar fileUri: Uri? = null\r\n\tvar count: Int = 1\r\n\tvar isPrescriptionRequire: String = \"\"\r\n\tvar distanceViewModel: TrackViewModel? = null\r\n\tprivate val co = Checkout()\r\n\tvar storelocation: ArrayList<StoreDetailsModel>? = null\r\n\tvar storeCustomerDistance = \"\"\r\n\tvar isSelected: String = \"\"\r\n\tvar address_id: String = \"\"\r\n\tvar merchant_instructions: String = \"\"\r\n\tvar islocationValid: Int = 0\r\n\tvar checkItemUpdate: Int = 0\r\n\tprivate lateinit var productsDatabase: ProductsDatabase\r\n\tprivate lateinit var restaurantProductsDatabase: RestaurantProductsDatabase\r\n\tprivate lateinit var prescriptionDatabase: PrescriptionDatabase\r\n\tvar viewmodelusertrack: UserTrackerViewModel? = null\r\n\tvar payment_failed_Diolog: Dialog? = null\r\n\tvar payment_suc_Diolog: Dialog? = null\r\n\r\n\tprivate var start_Lat: Double? = 0.0\r\n\tprivate var start_Lng: Double? = 0.0\r\n\tprivate var end_Lat: Double? = 0.0\r\n\tprivate var end_Lng: Double? = 0.0\r\n\tvar start_point: String = \"\"\r\n\tvar end_point: String = \"\"\r\n\tvar lastCustomized_str: String = \"\"\r\n\tvar check: Int = 0\r\n\tvar prescription_id: Int = 0\r\n\tvar checkStore: Int = 0\r\n\tvar prescriptionAdapter: PrescriptionAdapter? = null\r\n\tprivate var mMixpanel: MixpanelAPI? = null\r\n\tprivate  var dialog : Dialog? = null\r\n\tprivate var where: String? = \"\"\r\n\r\n\tcompanion object {\r\n\r\n\t\tvar addNewAddressFromCart : Int = 0\r\n\r\n\t\tvar store_imgStr: String = \"\"\r\n\t\tvar store_nameStr: String = \"\"\r\n\t\tvar selectedAddressId: String = \"\"\r\n\t\tvar selectedAddressName: String = \"\"\r\n\t\tvar selectedPreAddressName: String = \"\"\r\n\t\tvar selectedAddressTitle: String = \"\"\r\n\t\tvar selectedCouponId: String = \"\"\r\n\t\tvar selectedCouponName: String = \"\"\r\n\t\tvar userLat: String = \"\"\r\n\t\tvar userLong: String = \"\"\r\n\t\tvar storeLat: String = \"\"\r\n\t\tvar storeLong: String = \"\"\r\n\t\tvar other_taxes_and_charges: String = \"\"\r\n\t\t//var storeCustomerDistance: String = \"\"\r\n\t\tvar delivery_Lat: Double? = 0.0\r\n\t\tvar delivery_Lng: Double? = 0.0\r\n\t\tvar tempOrderId: String = \"\"\r\n\t\tvar proceedClick: Int = 0\r\n\t\tvar finalOrderId: String = \"\"\r\n\t\tvar accessToken: String = \"\"\r\n\t\tvar accountId: String = \"\"\r\n\t}\r\n\r\n\toverride fun onCreate(savedInstanceState: Bundle?) {\r\n\t\tsuper.onCreate(savedInstanceState)\r\n\t\tsetContentView(R.layout.activity_cart)\r\n\t\tval window: Window = this.window\r\n\t\twindow.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS)\r\n\t\twindow.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS)\r\n\t\twindow.statusBarColor = ContextCompat.getColor(this, R.color.colorPrimary)\r\n\t\tstoreId = intent.getStringExtra(\"storeId\").toString()\r\n\t\t//  tv_delivery_discount\r\n\t\tviewmodel = ViewModelProviders.of(this).get(CartViewModel::class.java)\r\n\t\tstoreViewModel = ViewModelProviders.of(this).get(StoreDetailsViewModel::class.java)\r\n\t\taddressViewModel = ViewModelProviders.of(this).get(AddressViewModel::class.java)\r\n\t\tviewmodelusertrack = ViewModelProviders.of(this).get(UserTrackerViewModel::class.java)\r\n\t\tdeleteAllPrecription()\r\n\t\tbehavior = BottomSheetBehavior.from(bottom_sheet)\r\n\t\tselectedAddressId = \"\"\r\n\t\tselectedAddressName = SessionTwiclo(this).userAddress\r\n\t\ttv_delivery_address_title.text = selectedAddressTitle\r\n\t\ttv_delivery_address.text = selectedAddressName\r\n\t\ttv_landmark.text = selectedPreAddressName\r\n\t\ttv_delivery_address.text = selectedAddressName\r\n\t\ttv_landmark.text = selectedPreAddressName\r\n\t\tif (!tv_delivery_address.text.isNullOrEmpty()) {\r\n\t\t\taddressViewModel?.getAddressesResponse?.observe(this@CartActivity, androidx.lifecycle.Observer { user ->\r\n\t\t\t\tif(user.addressList.size == 0){\r\n\t\t\t\t\ttv_select_address.text = \"Add Address\"\r\n\t\t\t\t\tselect_address_or_add_layout.visibility = View.VISIBLE\r\n\t\t\t\t}\r\n//\t\t\t\telse if (navigateFromCart == 1){\r\n//\t\t\t\t\tcart_payment_lay.visibility = View.VISIBLE\r\n//\t\t\t\t\tselect_address_or_add_layout.visibility = View.GONE\r\n//\t\t\t\t}\r\n\t\t\t\telse if(user.errorCode == 200){\r\n\t\t\t\t\ttv_select_address.text = \"Select Address\"\r\n\t\t\t\t\tselect_address_or_add_layout.visibility = View.VISIBLE\r\n\t\t\t\t\tcart_payment_lay.visibility = View.GONE\r\n\t\t\t\t}\r\n//\t\t\t\telse if (!user.addressList.isNullOrEmpty()) {\r\n//\t\t\t\t\t\tuser.addressList.forEach { list ->\r\n//\t\t\t\t\t\t\tif (tv_delivery_address.text.equals(list.location))\r\n//\t\t\t\t\t\t\t\tToast.makeText(_context, \"${list.location}\", Toast.LENGTH_SHORT).show()\r\n//\t\t\t\t\t\t\tLog.d(\"Rishab\", \"${list.location}\")\r\n//\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tselect_address_or_add_layout.visibility = View.VISIBLE\r\n\t\t\t\t\tcart_payment_lay.visibility = View.GONE\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if(tv_delivery_address.text.isNullOrEmpty()){\r\n\t\t\ttv_select_address.text = \"Add Address\"\r\n\t\t\tselect_address_or_add_layout.visibility = View.VISIBLE\r\n\t\t\tcart_payment_lay.visibility = View.GONE\r\n\t\t}\r\n\t\tselect_address_or_add_layout.setOnClickListener {\r\n\t\t\tif(tv_select_address.text.equals(\"Add Address\")){\r\n\t\t\t\tval intent = Intent(this@CartActivity,SavedAddressesActivityNew::class.java)\r\n\t\t\t\tstartActivity(intent)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowDialogBottom()\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\taddress_id = SessionTwiclo(this).userAddressId\r\n\t\tLog.d(\"address_idaddress_id\", address_id)\r\n\t\tselectedCouponId = \"\"\r\n\t\tstoreCustomerDistance = \"\"\r\n\t\tuserLat = SessionTwiclo(this).userLat\r\n\t\tuserLong = SessionTwiclo(this).userLng\r\n\t\tstoreLat = \"\"\r\n\t\tstoreLong = \"\"\r\n\t\tvar deliveryOption = \"contact\"\r\n\t\tcustomIdsList = ArrayList<String>()\r\n\t\tcustomIdsListTemp = ArrayList<CustomCheckBoxModel>()\r\n\t\taddCartTempList = ArrayList<AddCartInputModel>()\r\n\r\n\t\tmMixpanel = MixpanelAPI.getInstance(this, \"defeff96423cfb1e8c66f8ba83ab87fd\")\r\n\r\n\t\tif (SessionTwiclo(this).profileDetail != null && SessionTwiclo(this).profileDetail.account != null) {\r\n\t\t\tif (SessionTwiclo(this).profileDetail.account.name.equals(\"\")) {\r\n\t\t\t\tstartActivity(Intent(this, EditProfileActivity::class.java))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (SessionTwiclo(this).loggedInUserDetail != null) {\r\n\t\t\taccountId = SessionTwiclo(this).loggedInUserDetail.accountId\r\n\t\t\taccessToken = SessionTwiclo(this).loggedInUserDetail.accessToken\r\n\t\t}\r\n\t\telse {\r\n\t\t\taccountId = SessionTwiclo(this).loginDetail.accountId.toString()\r\n\t\t\taccessToken = SessionTwiclo(this).loginDetail.accessToken\r\n\t\t}\r\n\r\n\t\t//For Faster checkout of RazorPay\r\n\t\t// co.setKeyID(\"rzp_live_iceNLz5pb15jtP\")\r\n\r\n\t\ttry {\r\n\t\t\tif (isNetworkConnected) {\r\n\t\t\t\tif (SessionTwiclo(this).isLoggedIn) {\r\n\t\t\t\t\tviewmodel?.checkPaymentStatusApi(\r\n\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\taccessToken\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e:Exception){}\r\n\r\n\t\tvar paykey = BuildConfig.pay_key.toString()\r\n\t\tco.setKeyID(paykey)\r\n\r\n\t\tif (isNetworkConnected) {\r\n\r\n\t\t\tviewmodel?.getCartDetails(accountId, accessToken, userLat, userLong)\r\n\r\n\t\t\taddressViewModel?.getAddressesApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"\"\r\n\t\t\t)\r\n\r\n\t\t\tlinear_progress_indicator.visibility = View.VISIBLE\r\n\t\t\tno_internet_cart.visibility = View.GONE\r\n\t\t\tno_internet_Ll.visibility = View.GONE\r\n\t\t\tgetStoreDetails()\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\tmain_lay.visibility = View.GONE\r\n\t\t\tno_internet_cart.visibility = View.VISIBLE\r\n\t\t\tno_internet_Ll.visibility = View.VISIBLE\r\n\t\t\tshowInternetToast()\r\n\t\t}\r\n\r\n\t\tretry_onRefresh.setOnClickListener {\r\n\t\t\tif (isNetworkConnected) {\r\n\t\t\t\tgetStoreDetails()\r\n\t\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\tuserLat,\r\n\t\t\t\t\tuserLong\r\n\t\t\t\t)\r\n\t\t\t\taddressViewModel?.getAddressesApi(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)\r\n\r\n\t\t\t\tlinear_progress_indicator.visibility = View.VISIBLE\r\n\t\t\t\tmain_lay.visibility = View.VISIBLE\r\n\t\t\t\tno_internet_cart.visibility = View.GONE\r\n\t\t\t\tno_internet_Ll.visibility = View.GONE\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmain_lay.visibility = View.GONE\r\n\t\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\t\tno_internet_cart.visibility = View.VISIBLE\r\n\t\t\t\tno_internet_Ll.visibility = View.VISIBLE\r\n\t\t\t\tshowInternetToast()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbackIcon.setOnClickListener {\r\n\t\t\tif (checkItemUpdate == 0) {\r\n\t\t\t\tAppUtils.finishActivityLeftToRight(this@CartActivity)\r\n\t\t\t} else {\r\n\t\t\t\tval returnIntent = Intent()\r\n\t\t\t\tsetResult(RESULT_OK, returnIntent)\r\n\t\t\t\tfinish()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprescriptionViewEnable.setOnClickListener {\r\n\t\t\tprescriptionViewEnable.visibility = View.GONE\r\n\t\t\tprescriptionLay2.visibility = View.VISIBLE\r\n\t\t}\r\n\r\n\t\tnew_delivery_popup1.setOnClickListener {\r\n\t\t\t/*\tchargesFm.visibility = View.VISIBLE\r\n                chargesFmBg.visibility = View.VISIBLE\r\n                chargesFmBgbottom.visibility = View.VISIBLE*/\r\n\t\t\tcvdeliverydetail.visibility= View.VISIBLE\r\n\t\t\txyz.visibility= View.VISIBLE\r\n\t\t\tnew_polygon_2.visibility= View.VISIBLE\r\n\r\n\t\t\tmorecharges_.setOnClickListener {\r\n\t\t\t\tupto_3kms_.visibility= View.GONE\r\n\t\t\t\trate_id1.visibility= View.GONE\r\n\t\t\t\tmorecharges_.visibility=View.GONE\r\n\t\t\t\trv_newchargesa.visibility= View.VISIBLE\r\n\t\t\t\ttv_gstax.visibility= View.VISIBLE\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnested_top_lay.setOnClickListener {\r\n\t\t\tnew_polygon_2.visibility= View.GONE\r\n\t\t\tupto_3kms_.visibility= View.VISIBLE\r\n\t\t\trate_id1.visibility= View.VISIBLE\r\n\t\t\tmorecharges_.visibility=View.VISIBLE\r\n\t\t\trv_newchargesa.visibility= View.GONE\r\n\t\t\ttv_gstax.visibility= View.GONE\r\n\t\t\txyz.visibility = View.GONE\r\n\t\t}\r\n\r\n//\t\tif (userAddressList == 0){\r\n//\t\t\tcart_payment_lay.visibility = View.GONE\r\n//\t\t\tcart_payment_lay_One.visibility = View.VISIBLE\r\n//\t\t\tcart_payment_lay_One.setOnClickListener {\r\n//\t\t\t\tstartActivityForResult(\r\n//\t\t\t\t\tIntent(this, SavedAddressesActivity::class.java)\r\n//\t\t\t\t\t\t.putExtra(\"type\", \"order\"), FORADDRESS_REQUEST_CODE\r\n//\t\t\t\t)\r\n//\t\t\t\tval toast = Toast.makeText(this, \"$userAddressList\", Toast.LENGTH_LONG)\r\n//\t\t\t\ttoast.show()\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\telse if (userAddressList > 0){\r\n//\t\t\tcart_payment_lay.visibility = View.GONE\r\n//\t\t\tcart_payment_lay_One.visibility = View.VISIBLE\r\n//\t\t\tshowDialogBottom()\r\n//\t\t}\r\n\r\n\t\tchargesFmBg.setOnClickListener {\r\n//\t\t\tchargesFmBgbottom.visibility = View.GONE\r\n//\t\t\tchargesFm.visibility = View.GONE\r\n//\t\t\tchargesFmBg.visibility = View.GONE\r\n//\t\t\tchargesFmBg.visibility = View.GONE\r\n//\t\t\ttax_and_charges_lay.visibility = View.GONE\r\n\t\t\tcvdeliverydetail.visibility= View.VISIBLE\r\n\t\t}\r\n\r\n\t\tchargesFmBgbottom.setOnClickListener {\r\n//\t\t\tchargesFmBgbottom.visibility = View.GONE\r\n//\t\t\tchargesFm.visibility = View.GONE\r\n//\t\t\tchargesFmBg.visibility = View.GONE\r\n\t\t}\r\n\r\n\t\ttv_tax_charges_label.setOnClickListener {\r\n\r\n//\t\t\tchargesFmBg.visibility = View.VISIBLE\r\n//\t\t\ttax_and_charges_lay.visibility = View.VISIBLE\r\n\t\t}\r\n\r\n\t\tcb_no_contact_delivery.setOnCheckedChangeListener { _, b ->\r\n\t\t\tdeliveryOption = if (b) {\r\n\t\t\t\t\"contactless\"\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\"contact\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprescriptionImg.setOnClickListener {\r\n\t\t\tImagePicker.with(this)\r\n\t\t\t\t.crop()                    //Crop image(Optional), Check Customization for more option\r\n\t\t\t\t//   .compress(1024)\t\t\t//Final image size will be less than 1 MB(Optional)\r\n\t\t\t\t//  .maxResultSize(1080, 1080)\t//Final image resolution will be less than 1080 x 1080(Optional)\r\n\t\t\t\t.start()\r\n\t\t}\r\n\r\n\t\tviewmodel?.getCartDetailsResponse?.observe(this, Observer { user ->\r\n\t\t\tval testCartModel: CartModel = user\r\n\r\n\t\t\tif (user.have_standing_balance == \"1\") {\r\n\t\t\t\tshowOutstandingPaymentBottomSheet();\r\n\t\t\t\tLog.i(\"tesing outstanding\", \"outstanding payment is there\")\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tcustomAddBtn.setOnClickListener {\r\n\t\t\tif (isNetworkConnected) {\r\n\t\t\t\tvar mCartId: String? = null\r\n\r\n\t\t\t\tfor (i in 0 until categoryy!!.size) {\r\n\t\t\t\t\tcustomIdsList!!.add(categoryy!!.get(i).id.toString())\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewmodel?.getCartDetailsResponse?.observe(this, Observer { user ->\r\n\t\t\t\t\tval mCartModelData: CartModel = user\r\n\t\t\t\t\t//\tLog.d(\"gfhbdlfdf\",Gson)\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (user.cart.size != 0) {\r\n\t\t\t\t\t\t\tfor (i in 0 until user.cart.size) {\r\n\t\t\t\t\t\t\t\tmCartId = mCartModelData.cart[i].cart_id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e: NullPointerException) {\r\n\t\t\t\t\t\te.toString()\r\n\t\t\t\t\t\tmCartId=\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tLog.e(\"customIdsList\", customIdsList.toString())\r\n\r\n\t\t\t\tshowIOSProgress()\r\n\t\t\t\tSessionTwiclo(this).storeId = intent.getStringExtra(\"storeId\")\r\n\r\n\t\t\t\taddCartTempList!!.clear()\r\n\t\t\t\tval addCartInputModel = AddCartInputModel()\r\n\t\t\t\taddCartInputModel.productId = tempProductId\r\n\t\t\t\taddCartInputModel.quantity = countValuee.text.toString()\r\n\t\t\t\taddCartInputModel.message = \"add product\"\r\n\t\t\t\taddCartInputModel.customizeSubCatId = customIdsList!!\r\n\t\t\t\taddCartInputModel.isCustomize = \"1\"\r\n\t\t\t\taddCartTempList!!.add(addCartInputModel)\r\n\r\n\t\t\t\tviewmodel!!.addToCartApi(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\taddCartTempList!!,\r\n\t\t\t\t\tmCartId!!\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowInternetToast()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdelivery_addressCard.setOnClickListener {\r\n\t\t\tif (!isNetworkConnected) {\r\n\t\t\t\tshowToast(resources.getString(R.string.provide_internet))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstartActivityForResult(\r\n\t\t\t\t\tIntent(this, SavedAddressesActivityNew::class.java)\r\n\t\t\t\t\t\t.putExtra(\"type\", \"order\"), FORADDRESS_REQUEST_CODE\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcash_lay.setOnClickListener {\r\n\t\t\tisSelected = \"cash\"\r\n\t\t\tcash_lay.setBackgroundResource(R.drawable.black_rounded_solid)\r\n\t\t\tonline_lay.setBackgroundResource(R.drawable.payment_nonactiveleft)\r\n\r\n\t\t\timg_cash.setColorFilter(resources.getColor(R.color.primary_color))\r\n\t\t\ttv_cash.setTextColor(resources.getColor(R.color.primary_color))\r\n\r\n//            online_lay.background = ResourcesCompat.getDrawable(\r\n//                resources,\r\n//                R.drawable.black_rounded_solid, null\r\n//            )\r\n\t\t\ttv_online.setTextColor(resources.getColor(R.color.grey))\r\n\t\t\timg_online.setImageResource(R.drawable.online_pay_grey)\r\n\t\t\timg_online.setColorFilter(resources.getColor(R.color.grey))\r\n\t\t}\r\n\r\n\t\tonline_lay.setOnClickListener {\r\n\t\t\tisSelected = \"online\"\r\n\t\t\tonline_lay.setBackgroundResource(R.drawable.black_rounded_solid)\r\n\t\t\tcash_lay.setBackgroundResource(R.drawable.payment_nonactiveleft)\r\n\r\n\t\t\timg_online.setColorFilter(resources.getColor(R.color.primary_color))\r\n\t\t\ttv_online.setTextColor(resources.getColor(R.color.primary_color))\r\n\r\n//            cash_lay.background = ResourcesCompat.getDrawable(\r\n//                resources,\r\n//                R.drawable.black_rounded_solid, null\r\n//            )\r\n\t\t\ttv_cash.setTextColor(resources.getColor(R.color.grey))\r\n\t\t\timg_cash.setImageResource(R.drawable.cash_icon_grey)\r\n\t\t\timg_cash.setColorFilter(resources.getColor(R.color.grey))\r\n\r\n\t\t}\r\n\r\n\t\tdelivery_addressCard.setOnClickListener {\r\n\t\t\tcheckAddressSavedFromWhichActivity = \"fromCart\"\r\n//\t\t\tif (!isNetworkConnected) {\r\n//\t\t\t\tshowToast(resources.getString(R.string.provide_internet))\r\n//\t\t\t} else {\r\n//\t\t\t\tstartActivity(\r\n//\t\t\t\t\tIntent(this, SavedAddressesActivity::class.java).putExtra(\"type\", \"order\")\r\n//\r\n//\t\t\t\t)\r\n//\t\t\t}\r\n\t\t\tshowDialogBottom()\r\n\t\t}\r\n\r\n\t\tcart_payment_lay.setOnClickListener {\r\n\t\t\tif (!isNetworkConnected) {\r\n\t\t\t\tshowToast(resources.getString(R.string.provide_internet))\r\n\t\t\t} else {\r\n\t\t\t\tif (MainActivity.orderProcess == 0) {\r\n\t\t\t\t\tLog.d(\"userAddressId_\", SessionTwiclo(this).userAddressId)\r\n\t\t\t\t\tmerchant_instructions = instruction_restaurantEt.getText().toString().trim()\r\n\t\t\t\t\tif (address_id.equals(\"\") && tv_delivery_address.text == \"\") {\r\n\t\t\t\t\t\ttv_delivery_address.text = \"Select address\"\r\n\t\t\t\t\t\ttv_delivery_address_title.text = \"\"\r\n\t\t\t\t\t\ttv_landmark.text = \"\"\r\n\r\n\t\t\t\t\t\tshowToast(\"Please select your address\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isPrescriptionRequire == \"1\") {\r\n\t\t\t\t\t\tif (filePathTemp.equals(\"\")) {\r\n\t\t\t\t\t\t\tshowToast(\"Please upload prescription\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (isNetworkConnected) {\r\n\t\t\t\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\t\t\t\tviewmodel?.orderPlaceApi(\r\n\t\t\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\t\t\tfinalPrice.toFloat().toString(),\r\n\t\t\t\t\t\t\t\t\tdeliveryOption,\r\n\t\t\t\t\t\t\t\t\taddress_id,\r\n\t\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\t\ted_delivery_instructions.text.toString(),\r\n\t\t\t\t\t\t\t\t\tisSelected, merchant_instructions\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tshowInternetToast()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\t\tviewmodel?.orderPlaceApi(\r\n\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\tfinalPrice.toFloat().toString(),\r\n\t\t\t\t\t\t\tdeliveryOption,\r\n\t\t\t\t\t\t\taddress_id,\r\n\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\ted_delivery_instructions.text.toString(),\r\n\t\t\t\t\t\t\tisSelected, merchant_instructions\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tToast.makeText(this,\"One order is already in queue.\",Toast.LENGTH_SHORT).show()\r\n\t\t\t\t\t//\tshowToast(\"One order is already in queue.\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.addToCartResponse?.observe(this) { user ->\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"addToCartRes_cart\", Gson().toJson(user))\r\n\t\t\tif (user.errorCode == 200) {\r\n\t\t\t\tval mModelData: AddToCartModel = user\r\n\r\n\t\t\t\tif (behavior.state != BottomSheetBehavior.STATE_EXPANDED) {\r\n\t\t\t\t\tbehavior.setState(BottomSheetBehavior.STATE_EXPANDED)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbehavior.setState(BottomSheetBehavior.STATE_COLLAPSED)\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcheckItemUpdate = 1\r\n\t\t\t\t\thandleresponce = 1\r\n\t\t\t\t\thandleRes=1\r\n\t\t\t\t\t//  if (user.product_customize_id!=\"\") {\r\n\t\t\t\t\tThread {\r\n\t\t\t\t\t\tif (user.cart_quantity!!.toInt() == 0) {\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tupdateByCartIdProductCustomized(\r\n\t\t\t\t\t\t\t\tuser.cart_quantity!!.toInt(),\r\n\t\t\t\t\t\t\t\tuser.product_id!!,\r\n\t\t\t\t\t\t\t\tuser.is_customize_quantity!!.toInt(),\r\n\t\t\t\t\t\t\t\tlastCustomized_str!!,\r\n\t\t\t\t\t\t\t\tuser.cart_id!!,\r\n\t\t\t\t\t\t\t\tuser.product_customize_id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.start()\r\n\t\t\t\t\t//   }\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e: Exception) { }\r\n\r\n\t\t\t\tgetStoreDetails()\r\n\r\n\t\t\t\tviewmodel?.getCartDetails(accountId, accessToken, userLat, userLong)\r\n\r\n\t\t\t\tshowToast(mModelData.message)\r\n\t\t\t}\r\n\t\t\telse if(user.errorCode == 101){\r\n\t\t\t\tshowAlertDialog(this)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.customizeProductResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\r\n\t\t\tLog.e(\"stores response\", Gson().toJson(user))\r\n\t\t\tmModelDataTemp = user\r\n\r\n\t\t\tcategoryy = ArrayList()\r\n\r\n\t\t\tfor (i in 0..mModelDataTemp?.category?.size!! - 1) {\r\n\t\t\t\tif (mModelDataTemp?.category?.get(i)!!.isMultiple.equals(\"0\")) {\r\n\t\t\t\t\tif (mModelDataTemp?.category?.get(i)!!.isMandatory.equals(\"0\")) {\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar customListModel: CustomListModel? = CustomListModel()\r\n\t\t\t\t\t\tcustomListModel!!.category = mModelDataTemp?.category?.get(i)!!.catId\r\n\t\t\t\t\t\tcustomListModel!!.id =\r\n\t\t\t\t\t\t\tmModelDataTemp?.category?.get(i)!!.subCat[0].id.toInt()\r\n\t\t\t\t\t\tcustomListModel!!.price = mModelDataTemp?.category?.get(i)!!.subCat[0].price\r\n\t\t\t\t\t\tcustomListModel!!.subCatName =\r\n\t\t\t\t\t\t\tmModelDataTemp?.category?.get(i)!!.subCat[0].subCatName\r\n\t\t\t\t\t\tcategoryy!!.add(customListModel)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar tempPrice: Double? = 0.0\r\n\r\n\t\t\tfor (i in 0..customIdsListTemp!!.size - 1) {\r\n\t\t\t\ttempPrice = tempPrice!! + customIdsListTemp!!.get(i).price.toDouble()\r\n\t\t\t}\r\n\r\n\t\t\tfor (i in 0..categoryy!!.size - 1) {\r\n\t\t\t\ttempPrice = tempPrice!! + categoryy!!.get(i).price.toDouble()\r\n\t\t\t}\r\n\r\n\t\t\ttempPrice = tempOfferPrice!!.toDouble() + tempPrice!!\r\n\r\n\t\t\tcustomAddBtn.text =\r\n\t\t\t\t\"Add | \" + resources.getString(R.string.ruppee) + tempPrice.toString()\r\n\r\n\t\t\tval adapter = StoreCustomItemsAdapter(\r\n\t\t\t\tthis,\r\n\t\t\t\tmModelDataTemp?.category!!,\r\n\t\t\t\tthis,\r\n\t\t\t\tcategoryy,\r\n\t\t\t\tthis\r\n\t\t\t)\r\n\t\t\tcustomItemsRecyclerview.layoutManager = LinearLayoutManager(this)\r\n\t\t\tcustomItemsRecyclerview.setHasFixedSize(true)\r\n\t\t\tcustomItemsRecyclerview.adapter = adapter\r\n\t\t\t//   Toast.makeText(this, \"welcocsd\", Toast.LENGTH_LONG).show()\r\n\t\t}\r\n\r\n\t\tviewmodel?.addRemoveCartResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"addRemove_cart_response\", Gson().toJson(user))\r\n\t\t\tvar product_customize_id: String = \"\"\r\n\t\t\tvar cart_id: String = \"\"\r\n\t\t\tvar is_customize_quantity: Int = 0\r\n\t\t\tvar product_id: String = \"\"\r\n\t\t\tvar cart_quantity: Int = 0\r\n\t\t\tcheckItemUpdate = 1\r\n\r\n\t\t\tif (user.errorCode == 200) {\r\n\t\t\t\thandleresponce = 1\r\n\t\t\t\thandleRes=1\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (user.cart_quantity != null) {\r\n\t\t\t\t\t\tcart_quantity = user.cart_quantity!!.toInt()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.product_id != null) {\r\n\t\t\t\t\t\tproduct_id = user.product_id!!\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.is_customize_quantity != null) {\r\n\t\t\t\t\t\tis_customize_quantity = user.is_customize_quantity!!.toInt()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.cart_id != null) {\r\n\t\t\t\t\t\tcart_id = user.cart_id!!\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (user.product_customize_id != null) {\r\n\t\t\t\t\t\tproduct_customize_id = user.product_customize_id!!\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e: Exception) {e.printStackTrace() }\r\n\r\n\t\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\tuserLat,\r\n\t\t\t\t\tuserLong\r\n\t\t\t\t)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tThread {\r\n\t\t\t\t\t\tupdateByCartIdProductCustomized(\r\n\t\t\t\t\t\t\tcart_quantity, product_id, is_customize_quantity,\r\n\t\t\t\t\t\t\tlastCustomized_str!!, cart_id, product_customize_id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}.start()\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e: Exception) { }\r\n\t\t\t\tgetStoreDetails()\r\n\t\t\t}\r\n\t\t\telse if(user.errorCode==101){\r\n\t\t\t\tshowAlertDialog(this)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.deleteCartResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\r\n\t\t\tif (user.errorCode==200) {\r\n\t\t\t\tLog.e(\"deleteCartResponse_\", Gson().toJson(user))\r\n\t\t\t\tToast.makeText(this, user.message, Toast.LENGTH_LONG).show()\r\n\t\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\tuserLat,\r\n\t\t\t\t\tuserLong\r\n\t\t\t\t)\r\n\t\t\t\tgetStoreDetails()\r\n\t\t\t}else if(user.errorCode == 101){\r\n\t\t\t\tshowAlertDialog(this)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.getCartDetailsResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tmain_lay.visibility = View.VISIBLE\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\tLog.e(\"getCartDetailsResponse_\", Gson().toJson(user))\r\n\r\n\t\t\tisPrescriptionRequire = \"0\"\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\r\n\t\t\tif (!user.error) {\r\n\t\t\t\tif (user.cart != null) {\r\n\t\t\t\t\tval cartIndex = user.cart\r\n\r\n\t\t\t\t\t// store lat long\r\n\t\t\t\t\tstoreLat = user.store_lat\r\n\t\t\t\t\tstoreLong = user.store_long\r\n\r\n\t\t\t\t\tother_taxes_and_charges = user.totalTaxAndCharges.toString()\r\n\r\n\t\t\t\t\tLog.e(\"storeDataCartActivity__\", \"$storeLat---$storeLong-$other_taxes_and_charges\")\r\n\t\t\t\t\tcalculateStoreCustomerDistance()\r\n\r\n\t\t\t\t\t//do work for charges\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tif (user.charges_one.isNotEmpty()) {\r\n\t\t\t\t\t\t\tvar charges_oneStr = user.charges_one.split(\",\")\r\n\t\t\t\t\t\t\tcharges_oneTxt.text = charges_oneStr[0]\r\n\t\t\t\t\t\t\tcharges_onePriceTxt.text = \"₹ \" + charges_oneStr[1]\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (user.charges_two.isNotEmpty()) {\r\n\t\t\t\t\t\t\tvar charges_TwoStr = user.charges_two.split(\",\")\r\n\t\t\t\t\t\t\tcharges_TwoTxt.text = charges_TwoStr[0]\r\n\t\t\t\t\t\t\tcharges_TwoPriceTxt.text = \"₹ \" + charges_TwoStr[1]\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (user.charges_three.isNotEmpty()) {\r\n\t\t\t\t\t\t\tvar charges_ThreeStr = user.charges_three.split(\",\")\r\n\t\t\t\t\t\t\tcharges_ThreeTxt.text = charges_ThreeStr[0]\r\n\t\t\t\t\t\t\ttax_value.text = \"₹ \" + charges_ThreeStr[1]\r\n\r\n\t\t\t\t\t\t\trelativeLay.visibility=View.VISIBLE\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\trelativeLay.visibility=View.GONE\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvalue_AdditionalTxt.text=user.delivery_tax_rate\r\n\r\n\t\t\t\t\t\tval layoutManagerpopup= LinearLayoutManager(this)\r\n\t\t\t\t\t\trv_newchargesa.layoutManager= layoutManagerpopup\r\n\r\n\t\t\t\t\t\tvar adapterCharges=DeliveryChargesAdapter(this,user.deliveryChargesList as ArrayList)\r\n\t\t\t\t\t\trv_newchargesa.adapter=adapterCharges\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e: Exception) {\r\n\t\t\t\t\t\te.printStackTrace()\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tfor (i in 0 until cartIndex.size) {\r\n\t\t\t\t\t\tif (user.cart[i].isPrescription == \"1\") {\r\n\t\t\t\t\t\t\tisPrescriptionRequire = user.cart[i].isPrescription\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstore_nameStr = cartIndex.get(0).storeName.toString()\r\n\t\t\t\t\tloadImage(cartIndex.get(0).store_image.toString())\r\n\t\t\t\t\tstore_name_oncart.text = cartIndex.get(0).storeName.toString()\r\n\t\t\t\t\tstore_add_oncart.text = cartIndex.get(0).store_address.toString()\r\n\r\n\t\t\t\t\tif (isPrescriptionRequire.equals(\"1\")) {\r\n\r\n\t\t\t\t\t\tprescriptionLay.visibility = View.VISIBLE\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tprescriptionLay.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (user.cart[0].cod.equals(\"1\")) {\r\n\t\t\t\t\t\tisSelected = \"cash\"\r\n\t\t\t\t\t\tcash_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.visibility = View.VISIBLE\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcash_lay.visibility = View.GONE\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.isChecked = false\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (user.cart[0].online.equals(\"1\")) {\r\n\t\t\t\t\t\tonline_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t\tisSelected = \"online\"\r\n\t\t\t\t\t\tonline_lay.setBackgroundResource(R.drawable.black_rounded_solid)\r\n\t\t\t\t\t\tcash_lay.setBackgroundResource(R.drawable.payment_nonactiveleft)\r\n\r\n\t\t\t\t\t\timg_online.setColorFilter(resources.getColor(R.color.primary_color))\r\n\t\t\t\t\t\ttv_online.setTextColor(resources.getColor(R.color.primary_color))\r\n\t\t\t\t\t\ttv_cash.setTextColor(resources.getColor(R.color.grey))\r\n\t\t\t\t\t\timg_cash.setImageResource(R.drawable.cash_icon_grey)\r\n\t\t\t\t\t\timg_cash.setColorFilter(resources.getColor(R.color.grey))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//onlineRadioBtn.isChecked = false\r\n\t\t\t\t\t\tonline_lay.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (user.cart[0].online.equals(\"1\") && user.cart.get(0).cod.equals(\"1\")) {\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.isChecked = false\r\n\t\t\t\t\t\t//onlineRadioBtn.isChecked = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (user.cart[0].online.equals(\"0\") && user.cart.get(0).cod.equals(\"1\")) {\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.isChecked = true\r\n\t\t\t\t\t\t//onlineRadioBtn.isChecked = false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (user.cart[0].online.equals(\"1\") && user.cart.get(0).cod.equals(\"0\")) {\r\n\t\t\t\t\t\t//cashOnDeliveryRadioBtn.isChecked = false\r\n\t\t\t\t\t\t//onlineRadioBtn.isChecked = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tval mModelData: CartModel = user\r\n\r\n\t\t\t\t\tLog.e(\"mModelData_\", mModelData.cart.size.toString())\r\n\t\t\t\t\tstoreId=mModelData.cart[0].storeId.toString()\r\n\t\t\t\t\tSessionTwiclo(this).serviceId = mModelData.cart[0].service_id.toString()\r\n\r\n\t\t\t\t\tval adapter = CartItemsAdapter(this, mModelData.cart, this, this)\r\n\t\t\t\t\tcartItemsRecyclerView.layoutManager = LinearLayoutManager(this)\r\n\t\t\t\t\tcartItemsRecyclerView.setHasFixedSize(true)\r\n\t\t\t\t\tcartItemsRecyclerView.adapter = adapter\r\n\t\t\t\t\tvar items: String? = \"\"\r\n\t\t\t\t\ttotalAmount = 0.0\r\n\t\t\t\t\ttotalAmountWithouttax = 0.0\r\n\t\t\t\t\tnoOfItems = 0\r\n\r\n\t\t\t\t\t//nameLabel.text = user.cart.get(0).storeName\r\n\t\t\t\t\tfor (i in 0 until mModelData.cart.size) {\r\n\t\t\t\t\t\tnoOfItems += mModelData.cart[i].quantity.toString().toInt()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar tempp: Double? = 0.0\r\n\r\n\t\t\t\t\tfor (i in 0 until mModelData.cart.size) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t//\tLog.d(\"mModelData__\", mModelData.cart[i].service_id)\r\n\t\t\t\t\t\t\tif (mModelData.cart[0].service_id.toString()\r\n\t\t\t\t\t\t\t\t\t.equals(\"5\") || mModelData.cart[0].service_id.toString()\r\n\t\t\t\t\t\t\t\t\t.equals(\"7\")\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tstore_header_ll.visibility = View.VISIBLE\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstore_header_ll.visibility = View.GONE\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e: java.lang.Exception) {\r\n\t\t\t\t\t\t\te.printStackTrace()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttempp = 0.0\r\n\t\t\t\t\t\tfor (j in 0 until mModelData.cart[i].customizeItem.size) {\r\n\t\t\t\t\t\t\ttempp =\r\n\t\t\t\t\t\t\t\ttempp!! + mModelData.cart[i].customizeItem.get(j).price.toDouble()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempp = tempp!! + mModelData.cart[i].offerPrice.toDouble()\r\n\r\n\t\t\t\t\t\ttotalAmount += (mModelData.cart[i].quantity.toString().toDouble() * tempp)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tval deliveryChargeWithTax = mModelData.deliveryCharge + mModelData.tax.toInt()\r\n\r\n\t\t\t\t\t// Item Total\r\n\t\t\t\t\tval rounded1 = totalAmount.toBigDecimal().setScale(2, RoundingMode.UP).toDouble()\r\n\t\t\t\t\ttv_subtotal.text = resources.getString(R.string.ruppee) + rounded1\r\n\r\n\r\n\t\t\t\t\ttotalAmount = totalAmount + deliveryChargeWithTax\r\n\t\t\t\t\t//showToast(totalAmount.toString())\r\n\t\t\t\t\t//\ttotalAmount = (totalAmount - mModelData.deliveryDiscount)\r\n\r\n\t\t\t\t\t// Taxes and charges For UrbanPiper Products\r\n\t\t\t\t\tif (mModelData.totalTaxAndCharges.toString() == \"\" || mModelData.totalTaxAndCharges == null) {\r\n\t\t\t\t\t\ttotalAmount = (totalAmount - mModelData.deliveryDiscount)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttotalAmount =\r\n\t\t\t\t\t\t\t(totalAmount - mModelData.deliveryDiscount) + mModelData.totalTaxAndCharges\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//showToast(mModelData.totalTaxAndCharges.toString())\r\n\t\t\t\t\tfinalPrice = totalAmount\r\n\r\n\t\t\t\t\t//numberOfItemsValue.text = noOfItems.toString() + \" Items\"\r\n\r\n\t\t\t\t\tval rounded = finalPrice.toBigDecimal().setScale(2, RoundingMode.UP).toDouble()\r\n\t\t\t\t\ttv_grand_total.text =\r\n\t\t\t\t\t\tresources.getString(R.string.ruppee) + rounded.toString()\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t *  ---------------------------------------------------------------------------------------------\r\n\t\t\t\t\t */\r\n\t\t\t\t\ttv_place_order.text = \"Pay \" + resources.getString(R.string.ruppee) + rounded.toString()\r\n\r\n\t\t\t\t\tLog.e(\"Bottom Price\", tv_place_order.text.toString())\r\n\t\t\t\t\tLog.e(\"Grand Total\", tv_grand_total.text.toString())\r\n\t\t\t\t\t//showToast(mModelData.deliveryDiscount)\r\n\t\t\t\t\t//showToast(finalPrice.toString())\r\n\r\n\t\t\t\t\tval dist:Double = (mModelData.distance.toDouble()/1000)\r\n\t\t\t\t\tval df= DecimalFormat(\"#.##\")\r\n\t\t\t\t\tval net_dist= df.format(dist)\r\n\t\t\t\t\ttv_delivery_charges_label.text= \"Delivery charges | ${net_dist}kms\"\r\n\t\t\t\t\tuseconstants.user_dist = mModelData.distance\r\n\r\n\t\t\t\t\tif (mModelData.distance<=3000){\r\n\t\t\t\t\t\tupto_3kms_.text= \"upto 3kms\"\r\n\t\t\t\t\t\trate_id1.text= resources.getString(R.string.ruppee)+\"18\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (mModelData.distance>3000 && mModelData.distance<=6000){\r\n\t\t\t\t\t\tupto_3kms_.text= \"above 3kms-6kms\"\r\n\t\t\t\t\t\trate_id1.text= resources.getString(R.string.ruppee)+\"36\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (mModelData.distance>6000 && mModelData.distance<=9000){\r\n\t\t\t\t\t\tupto_3kms_.text= \"above 6kms-9kms\"\r\n\t\t\t\t\t\trate_id1.text= resources.getString(R.string.ruppee)+\"54\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (mModelData.distance > 9000 && mModelData.distance<=12000){\r\n\t\t\t\t\t\tupto_3kms_.text= \"above 9kms-12kms\"\r\n\t\t\t\t\t\trate_id1.text= resources.getString(R.string.ruppee)+\"72\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (mModelData.distance>12000){\r\n\t\t\t\t\t\tupto_3kms_.text= \"above 12kms\"\r\n\t\t\t\t\t\trate_id1.text= resources.getString(R.string.ruppee)+\"90\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttv_delivery_charges.text =\r\n\t\t\t\t\t\tresources.getString(R.string.ruppee) + deliveryChargeWithTax\r\n\r\n\t\t\t\t\t// Taxes and charges For UrbanPiper Products\r\n\t\t\t\t\tif (mModelData.totalTaxAndCharges.toString().equals(\"0.0\")) {\r\n\t\t\t\t\t\ttv_tax_charges_label.visibility = View.GONE\r\n\t\t\t\t\t\ttv_tax_charges.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttv_tax_charges_label.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_tax_charges.visibility = View.VISIBLE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttv_tax_charges.text = resources.getString(R.string.ruppee) + mModelData.totalTaxAndCharges\r\n\t\t\t\t\tcharges_value.text = resources.getString(R.string.ruppee) + mModelData.allItemChargeTotal\r\n\t\t\t\t\t//tax_value.text = resources.getString(R.string.ruppee) + mModelData.allItemTaxTotal\r\n\r\n\t\t\t\t\tif (mModelData.deliveryDiscount == 0) {\r\n\t\t\t\t\t\t//delivery_coupon_name.visibility = View.GONE\r\n\t\t\t\t\t\t//delivery_coupon_value.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\tLog.d(\"ddaifvzd\", mModelData.deliveryDiscount.toFloat().toString())\r\n\r\n\t\t\t\t\tif (mModelData.deliveryDiscount.toFloat().toString().equals(\"0.0\")) {\r\n\t\t\t\t\t\ttv_delivery_discount_label.visibility = View.GONE\r\n\t\t\t\t\t\ttv_delivery_discount.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_afterdiscount_lable.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_cart_afterDiscount.visibility = View.VISIBLE\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttv_cart_afterdiscount_lable.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_afterDiscount.visibility = View.GONE\r\n\t\t\t\t\t\ttv_delivery_discount_label.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_delivery_discount.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_delivery_discount_label.text = \"Delivery Discount (\" + mModelData.delivery_coupon_name + \")\"\r\n\t\t\t\t\t\ttv_delivery_discount.text = \"- \" + resources.getString(R.string.ruppee) + mModelData.deliveryDiscount.toFloat()\r\n\t\t\t\t\t\ttv_cart_afterDiscount.text = resources.getString(R.string.ruppee) + mModelData.after_discount_value.toFloat().toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//discountValue.text = resources.getString(R.string.ruppee) + mModelData.discount_amount.toString()\r\n\t\t\t\t\t//tv_delivery_discount.text = \"Cart Discount (\" + mModelData.coupon_name +\")\"\r\n\t\t\t\t\t//totalAmountBottom.text = resources.getString(R.string.ruppee) + finalPrice.toString()\r\n\t\t\t\t\tLog.d(\"eligible_for_cart_coupon_\",mModelData.eligible_for_cart_coupon)\r\n\t\t\t\t\tif (mModelData.eligible_for_cart_coupon.equals(\"0\")){\r\n\t\t\t\t\t\tcv_couponCard.visibility = View.VISIBLE\r\n\t\t\t\t\t\tsmpviewnew.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_cart_discount_label.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_discount.visibility = View.GONE\r\n\r\n\t\t\t\t\t\ttv_coupon.text =  mModelData.coupon_name\r\n\t\t\t\t\t\ttv_limitexceed.text =  \"Your limit has been exceeded.\"\r\n\t\t\t\t\t\ttv_limitexceed.setTextColor(resources.getColor(R.color.red))\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (mModelData.eligible_for_cart_coupon.equals(\"1\")){\r\n\t\t\t\t\t\tcv_couponCard.visibility = View.VISIBLE\r\n\t\t\t\t\t\tsmpviewnew.visibility = View.VISIBLE\r\n\r\n\t\t\t\t\t\ttv_cart_discount_label.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_cart_discount.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_cart_discount.text =\r\n\t\t\t\t\t\t\t\"- \" + resources.getString(R.string.ruppee) + user.discount_amount.toFloat()\r\n\t\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\ttv_coupon.text =  mModelData.coupon_name\r\n\t\t\t\t\t\ttv_limitexceed.text =  \"Offer applied on the bill\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcv_couponCard.visibility = View.GONE\r\n\t\t\t\t\t\tsmpviewnew.visibility = View.GONE\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!mModelData.coupon_id.equals(\"\")) {\r\n\r\n\t\t\t\t\t\t//tv_coupon.visibility = View.VISIBLE\r\n\r\n\t\t\t\t\t\t//tv_cart_discount.visibility = View.VISIBLE\r\n\t\t\t\t\t\t//tv_cart_discount_label.visibility = View.VISIBLE\r\n\r\n//\t\t\t\t\t\ttv_cart_discount_label.text =\r\n//\t\t\t\t\t\t\t\"Cart Discount (\" + mModelData.coupon_name + \")\"\r\n//\t\t\t\t\t\ttv_coupon.text =  mModelData.coupon_name\r\n//\t\t\t\t\t\ttv_cart_discount.text =\r\n//\t\t\t\t\t\t\t\"- \" + resources.getString(R.string.ruppee) + user.discount_amount.toFloat()\r\n//\t\t\t\t\t\t\t\t.toString()\r\n\r\n\t\t\t\t\t\t//\ttotalAmount = (totalAmount - mModelData.discount_amount.toDouble())\r\n\r\n\t\t\t\t\t\t// Taxes and charges For UrbanPiper Products\r\n\t\t\t\t\t\tif (mModelData.totalTaxAndCharges.toString() == \"\" || mModelData.totalTaxAndCharges == null) {\r\n\t\t\t\t\t\t\ttotalAmount = (totalAmount - mModelData.discount_amount.toDouble())\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttotalAmount =\r\n\t\t\t\t\t\t\t\t(totalAmount - mModelData.discount_amount.toDouble()) + mModelData.totalTaxAndCharges\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//update by prem\r\n\t\t\t\t\t\tfinalPrice = totalAmount\r\n\t\t\t\t\t\ttv_place_order.text =\r\n\t\t\t\t\t\t\t\"Pay \" + resources.getString(R.string.ruppee) + totalAmount.toFloat()\r\n\t\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t//edit by prem\r\n\t\t\t\t\t\tval rounded = totalAmount.toBigDecimal().setScale(2, RoundingMode.UP).toDouble()\r\n\t\t\t\t\t\ttv_grand_total.text =\r\n\t\t\t\t\t\t\tresources.getString(R.string.ruppee) + rounded.toString()\r\n\r\n\r\n\t\t\t\t\t\tLog.e(\"after_discount_vffalue\", mModelData.after_discount_value)\r\n\t\t\t\t\t\ttv_cart_afterDiscount.text =\r\n\t\t\t\t\t\t\tresources.getString(R.string.ruppee) + mModelData.after_discount_value.toFloat()\r\n\t\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\ttv_cart_afterDiscount.visibility = View.VISIBLE\r\n\t\t\t\t\t\ttv_cart_afterdiscount_lable.visibility = View.VISIBLE\r\n\r\n\t\t\t\t\t\t//showToast(\"Offer applied successfully\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsmpviewnew.visibility = View.GONE\r\n\t\t\t\t\t\tcv_couponCard.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_discount.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_discount_label.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_afterDiscount.visibility = View.GONE\r\n\t\t\t\t\t\ttv_cart_afterdiscount_lable.visibility = View.GONE\r\n\t\t\t\t\t\ttv_coupon.visibility = View.GONE\r\n\t\t\t\t\t\t//coupon_lay.visibility = View.GONE\r\n\t\t\t\t\t\t//discountValue.visibility = View.GONE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnested_top_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t//place_order_lay.visibility = View.VISIBLE\r\n\t\t\t\t\tnoItemsTxt.visibility = View.GONE\r\n\t\t\t\t\tcheck = 1\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnested_top_lay.visibility = View.GONE\r\n\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n\t\t\t\t\tnoItemsTxt.visibility = View.VISIBLE\r\n\t\t\t\t\tcheck = 0\r\n\r\n\t\t\t\t\t//showToast(\"No items\")\r\n\t\t\t\t\t//finish()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (user.errorCode == 101) {\r\n\t\t\t\t\tshowAlertDialog(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.paymentResponse?.observe(this) { user ->\r\n\t\t\tLog.e(\"cart___response\", Gson().toJson(user))\r\n\t\t\tdismissIOSProgress()\r\n\t\t\t/// paySuccessPopUp()\r\n\t\t\tSessionTwiclo(this).storeId = \"\"\r\n\t\t\tproceedClick = 0\r\n\t\t\tfinalOrderId = user.orderId\r\n//\t\t\tviewmodel?.proceedToOrder(\r\n//\t\t\t\taccountId,\r\n//\t\t\t\taccessToken,\r\n//\t\t\t\tfinalOrderId\r\n//\t\t\t)\r\n\t\t}\r\n\r\n\t\tviewmodel?.paymentFailureResponse?.observe(this) { user ->\r\n\t\t\tLog.e(\"paymentFailureResponse_\", Gson().toJson(user))\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tif (user.errorCode==100){\r\n\t\t\t\tpayment_failed_Diolog()\r\n\t\t\t}else if (user.errorCode==200){\r\n\t\t\t\tpaySuccessPopUp()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.checkPaymentStatusRes?.observe(this) { user ->\r\n\t\t\tLog.e(\"paymentFailureResponse_\", Gson().toJson(user))\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tif (user.error_code==200){\r\n\t\t\t\tpaySuccessPopUp()\r\n\t\t\t}else {\r\n//\t\t\t\tif (user.error_code==100){\r\n//\t\t\t\tpayment_failed_Diolog()\r\n\t\t\t}\r\n\t\t}\r\n\r\n//\t\tviewmodel?.proceedToOrderResponse?.observe(this, { orderProceed ->\r\n//\t\t\tLog.e(\"proceedToOrderResponse\", Gson().toJson(orderProceed))\r\n//\t\t\tdismissIOSProgress()\r\n//\t\t})\r\n\r\n\t\tviewmodel?.uploadPrescriptionResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"uploadPrescriptio___\", Gson().toJson(user))\r\n\r\n\t\t\tprescriptiontUpdate(prescription_id, fileUri.toString(), filePathTemp, user.document_id)\r\n\t\t\tprescription_id++\r\n\t\t\tprescriptiontInsert(prescription_id, \"null\", \"null\", \"null\")\r\n\t\t\tgetPresciption()\r\n\r\n\t\t\tcart_payment_lay.isEnabled = true\r\n\t\t\tcart_payment_lay.alpha = 1.0f\r\n\t\t}\r\n\r\n\t\tviewmodel?.deletePrescriptionResponse?.observe(this) { prescription ->\r\n\t\t\tLog.e(\"prescription__\", Gson().toJson(prescription))\r\n\t\t\tdismissIOSProgress()\r\n\t\t}\r\n\r\n\t\tviewmodel?.appplyPromoResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"cart response\", Gson().toJson(user))\r\n\r\n\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\tuserLat,\r\n\t\t\t\tuserLong\r\n\t\t\t)\r\n\r\n\t\t\tif (user.couponApply.equals(\"2\")) {\r\n\r\n\t\t\t\t/*appliedpromoValue.visibility = View.VISIBLE\r\n\t\t\t\t\tappliedpromoDesc.visibility = View.VISIBLE\r\n\t\t\t\t\tremoveBtn.visibility = View.VISIBLE\r\n\t\t\t\t\tview333.visibility = View.VISIBLE\r\n\t\t\t\t\tpromoValue.visibility = View.GONE\r\n\t\t\t\t\tapplyBtn.visibility = View.GONE\r\n\t\t\t\t\tgetOfferTxt.visibility = View.GONE\r\n\t\t\t\t\tofferIcon.visibility = View.GONE*/\r\n\t\t\t\t//tv_coupon.text = promoValue.text.toString()*/\r\n\r\n\t\t\t\ttv_cart_discount.text =\r\n\t\t\t\t\tresources.getString(R.string.ruppee) + user.discountAmount\r\n\t\t\t\ttotalAmount = totalAmount - user.discountAmount.toDouble()\r\n\t\t\t\ttv_place_order.text =\r\n\t\t\t\t\t\"Pay \" + resources.getString(R.string.ruppee) + totalAmount.toFloat().toString()\r\n\r\n\t\t\t\t//edit by prem\r\n\t\t\t\tval rounded = totalAmount.toBigDecimal().setScale(2, RoundingMode.UP).toDouble()\r\n\t\t\t\ttv_grand_total.text =\r\n\t\t\t\t\tresources.getString(R.string.ruppee) + rounded.toString()\r\n\r\n\t\t\t\t//\tLog.e(\"Final Price after promo\", tv_place_order.text.toString())\r\n\r\n\t\t\t\t//discountLabel.visibility = View.VISIBLE\r\n\t\t\t\t//discountValue.visibility = View.VISIBLE\r\n\t\t\t\t//showToast(\"0.0Offer applied successfully\")\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/*appliedpromoValue.visibility = View.GONE\r\n                appliedpromoDesc.visibility = View.GONE\r\n                removeBtn.visibility = View.GONE\r\n                view333.visibility = View.GONE\r\n                promoValue.visibility = View.VISIBLE\r\n                // applyBtn.visibility = View.VISIBLE\r\n                getOfferTxt.visibility = View.VISIBLE\r\n                offerIcon.visibility = View.VISIBLE*/\r\n\r\n\t\t\t\tshowToast(user.message)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.orderPlaceResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"orderPlaceResponse____\", Gson().toJson(user))\r\n\t\t\t// Log.d(\"orderPlaceResponse____\", user.errorCode.toString())\r\n\t\t\tif (user.errorCode == 200) {\r\n\t\t\t\ttempOrderId = user.orderId\r\n\t\t\t\tif (isSelected == \"online\") {\r\n\t\t\t\t\tif (user.error.equals(true)) {\r\n\t\t\t\t\t\tif (user.storeOffline == 1) {\r\n\t\t\t\t\t\t\tshowToast(user.message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (user.productOutOfStock == 1) {\r\n\t\t\t\t\t\t\tshowToast(user.message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (user.storeOffline == 1 && user.productOutOfStock == 1) {\r\n\t\t\t\t\t\t\tshowToast(\"This Store/Item is not available at this moment\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstartPayment(user.razorPayOrderId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//launchPayUMoneyFlow()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNetworkConnected) {\r\n\t\t\t\t\t\tpaySuccessPopUp()\r\n\t\t\t\t\t\tviewmodel?.paymentApi(\r\n\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\tuser.orderId,\r\n\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\"cash\",\r\n\t\t\t\t\t\t\tother_taxes_and_charges\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tshowInternetToast()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (user.errorCode == 400) {\r\n\t\t\t\tToast.makeText(this, \"\" + user.message, Toast.LENGTH_LONG).show()\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tToast.makeText(this, \"\" + user.message, Toast.LENGTH_LONG).show()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.cartCountResponse?.observe(this) { user ->\r\n\t\t\tLog.d(\"cartCountResponse\", Gson().toJson(user))\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tif (user != null) {\r\n\t\t\t\tif (!user.error) {\r\n\t\t\t\t\tif (user.count != null) {\r\n\t\t\t\t\t\tif (user.count.toInt() > 0) {\r\n\t\t\t\t\t\t\tnested_top_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t\t\t//place_order_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t\t\tnoItemsTxt.visibility = View.GONE\r\n\t\t\t\t\t\t\tcheck = 1\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnested_top_lay.visibility = View.GONE\r\n\t\t\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n\t\t\t\t\t\t\tnoItemsTxt.visibility = View.VISIBLE\r\n\t\t\t\t\t\t\tcheck = 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tviewmodel?.failureResponse?.observe(this) { user ->\r\n\t\t\tdismissIOSProgress()\r\n\t\t\tLog.e(\"cart_response\", Gson().toJson(user))\r\n\t\t\t//  showToast(user)\r\n\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\tisPrescriptionRequire = \"0\"\r\n\t\t\tlinear_progress_indicator.visibility = View.GONE\r\n\t\t\tviewmodel?.getCartCountApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken\r\n\t\t\t)\r\n\t\t}\r\n\t\tprescriptiontInsert(prescription_id!!, \"null\", \"null\", \"null\")\r\n\t\tgetPresciption()\r\n\t}\r\n\r\n\tprivate fun showOutstandingPaymentBottomSheet() {\r\n\t\tval outstandingPaymentBottomSheet = BottomSheetDialog(this)\r\n\t\toutstandingPaymentBottomSheet.setContentView(R.layout.outstanding_payment_layout)\r\n\t\toutstandingPaymentBottomSheet.setCancelable(false)\r\n\t\toutstandingPaymentBottomSheet.show()\r\n\t}\r\n\r\n//\tprivate fun showDialogBottom() {\r\n//\t\tdialog = this@CartActivity.let { Dialog(it) }!!\r\n//\t\tdialog?.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n//\t\tdialog?.setContentView(R.layout.manage_address_bottomsheet_dialogue)\r\n//\r\n//\t\tdialog?.show()\r\n//\t}\r\n\r\n   fun getAddress(){\r\n\taddressViewModel?.getAddressesResponse?.observe(this@CartActivity, androidx.lifecycle.Observer {\r\n\t\tif (it.addressList.size >= 1) {\r\n\t\t\tif (!it.addressList.isNullOrEmpty()) {\r\n\t\t\t\tval flat = it.addressList[0].flatNo\r\n\t\t\t\tval locality = it.addressList[0].location\r\n\t\t\t\tval landmark = it.addressList[0].landmark\r\n\t\t\t\tif (!landmark.isNullOrEmpty()) {\r\n\t\t\t\t\ttv_delivery_address.text = \"$flat\" + \", \" + \"$landmark\" + \", \" + \"$locality\"\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttv_delivery_address.text = \"$flat\" + \", \" + \"$locality\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t})\r\n}\r\n\r\n\tprivate fun showDialogBottom() {\r\n\t\tdialog = this@CartActivity?.let { Dialog(it) }!!\r\n\t\tdialog?.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n\t\tdialog?.setContentView(R.layout.manage_address_bottomsheet_dialogue)\r\n\t\tval lvAddNewAdd = dialog?.findViewById<LinearLayout>(R.id.lv_add_new_address)\r\n\t\tval notToSee = dialog?.findViewById<LinearLayout>(R.id.cart_select_layout)\r\n\t\tval bottomSheetAddress = dialog?.findViewById<LinearLayout>(R.id.ll_bottomSheetAddress)\r\n\t\tval lvCheckLocation = dialog?.findViewById<LinearLayout>(R.id.manage_location_Off_or_On)\r\n\t\tval rvManageAddress = dialog?.findViewById<RecyclerView>(R.id.rvManageSavedAddress)\r\n\t\tval mBtnToTurnOnLocation = dialog?.findViewById<Button>(R.id.btnToTurnLocationOn)\r\n\t\tmBtnToTurnOnLocation?.setOnClickListener {\r\n\t\t\tval permList = arrayOf(\r\n\t\t\t\tManifest.permission.ACCESS_FINE_LOCATION,\r\n\t\t\t\tManifest.permission.ACCESS_COARSE_LOCATION,\r\n\t\t\t\tManifest.permission.ACCESS_BACKGROUND_LOCATION\r\n\t\t\t)\r\n\t\t\trequestPermissions(permList, 100)\r\n\t\t\tval intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n\t\t\tstartActivity(intent)\r\n\t\t\tdialog?.dismiss()\r\n\t\t}\r\n\t\tlvAddNewAdd?.setOnClickListener {\r\n\t\t\taddNewAddressFromCart = 1\r\n\t\t\tnavigateFromNewAddressActivity = 0\r\n\t\t\tstartActivityForResult(\r\n\t\t\t\tIntent(this, SavedAddressesActivityNew::class.java)\r\n\t\t\t\t\t.putExtra(\"type\", \"address\")\r\n\t\t\t\t\t.putExtra(\"where\", where\r\n\t\t\t\t\t), AUTOCOMPLETE_REQUEST_CODE\r\n\t\t\t)\r\n\t\t\tMainActivity.addEditAdd = \"Dashboard\"\r\n\t\t\tnavigateFromCart = 1\r\n\t\t\tdialog?.dismiss()\r\n\t\t}\r\n\t\taddressViewModel?.getAddressesResponse?.observe(this@CartActivity, androidx.lifecycle.Observer { user ->\r\n\t\t\tLog.e(\"addresses_response\", Gson().toJson(user))\r\n\t\t\tif(user.addressList.size == 0){\r\n\t\t\t\tbottomSheetAddress?.visibility = View.GONE\r\n\t\t\t}\r\n\t\t\tif (!user.addressList.isNullOrEmpty()) {\r\n\t\t\t\tbottomSheetAddress?.visibility = View.VISIBLE\r\n\t\t\t\tnotToSee?.visibility = View.VISIBLE\r\n\t\t\t\tval adapter = AddressesAdapterBottom(\r\n\t\t\t\t\tthis@CartActivity, user.addressList,\r\n\t\t\t\t\tobject : AddressesAdapterBottom.SetOnDeteleAddListener {\r\n\t\t\t\t\t\toverride fun onDelete(\r\n\t\t\t\t\t\t\tadd_id: String,\r\n\t\t\t\t\t\t\taddressList: GetAddressModel.AddressList\r\n\t\t\t\t\t\t) {}\r\n\t\t\t\t\t\toverride fun onClick(addressList: GetAddressModel.AddressList) {\r\n\t\t\t\t\t\t\tNewAddAddressActivityNew.checkCount = 0\r\n\t\t\t\t\t\t\twhen {\r\n\t\t\t\t\t\t\t\taddressList.addressType.equals(\"1\") -> {\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userAddress = addressList.flatNo + \", \" + addressList.landmark + \", \" + addressList.location\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).addressType= \"Home\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\taddressList.addressType.equals(\"2\") -> {\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userAddress = addressList.flatNo + \", \" + addressList.landmark + \", \" + addressList.location\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).addressType = \"Office\"\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\telse -> {\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userAddress = addressList.flatNo + \", \" + addressList.landmark + \", \" + addressList.location\r\n\t\t\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).addressType = \"Other\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userAddress = addressList.flatNo + \", \" + addressList.landmark + \", \" + addressList.location\r\n\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userAddressId = addressList.id\r\n\t\t\t\t\t\t\taddress_id=addressList.id\r\n\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userLat = addressList.latitude\r\n\t\t\t\t\t\t\tSessionTwiclo(this@CartActivity).userLng = addressList.longitude\r\n\t\t\t\t\t\t\t//address_id = SessionTwiclo(this@CartActivity).userAddressId\r\n\t\t\t\t\t\t\tdialog?.dismiss()\r\n\t\t\t\t\t\t\trestHomePage()\r\n\t\t\t\t\t\t\tuserLat= addressList.latitude\r\n\t\t\t\t\t\t\tuserLong=addressList.longitude\r\n\t\t\t\t\t\t\tif (!userLat.isNullOrEmpty() && !userLong.isNullOrEmpty()) {\r\n\t\t\t\t\t\t\t\tselect_address_or_add_layout.visibility = View.GONE\r\n\t\t\t\t\t\t\t\tcart_payment_lay.visibility = View.VISIBLE\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tToast.makeText(this@CartActivity, \"Add valid address\", Toast.LENGTH_SHORT).show()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\t\tuserLat,\r\n\t\t\t\t\t\t\t\tuserLong\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"bottomSheetAddress\"\r\n\t\t\t\t)\r\n\t\t\t\trvManageAddress?.layoutManager = GridLayoutManager(this@CartActivity, 1)\r\n\t\t\t\trvManageAddress?.setHasFixedSize(true)\r\n\t\t\t\trvManageAddress?.adapter = adapter\r\n\t\t\t}\r\n\t\t})\r\n\t\tval manager = this@CartActivity.getSystemService(Context.LOCATION_SERVICE) as LocationManager\r\n\t\tif (manager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n\t\t\tlvCheckLocation?.visibility = View.GONE\r\n\t\t}\r\n\t\tdialog?.setCanceledOnTouchOutside(true)\r\n\t\tdialog?.show()\r\n\t\tdialog?.window!!.setLayout(\r\n\t\t\tViewGroup.LayoutParams.MATCH_PARENT,\r\n\t\t\tViewGroup.LayoutParams.WRAP_CONTENT\r\n\t\t)\r\n\t\tdialog?.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n\t\tdialog?.window!!.setGravity(Gravity.BOTTOM)\r\n\r\n\t}\r\n\r\n\tprivate fun restHomePage() {\r\n\t\tdeleteRoomDataBase()\r\n\t\tif (SessionTwiclo(this@CartActivity).isLoggedIn) {\r\n\t\t\tviewmodel?.getCartCountApi(\r\n\t\t\t\tSessionTwiclo(this@CartActivity).loggedInUserDetail.accountId,\r\n\t\t\t\tSessionTwiclo(this@CartActivity).loggedInUserDetail.accessToken\r\n\t\t\t)\r\n\t\t\ttv_delivery_address?.text = SessionTwiclo(this@CartActivity).userAddress\r\n//\t\t\tToast.makeText(_context, \"\"+address_id, Toast.LENGTH_LONG).show()\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttv_delivery_address?.text = SessionTwiclo(this@CartActivity).userAddress\r\n\t\t}\r\n\t}\r\n\r\n\tprivate fun deleteRoomDataBase() {\r\n\t\ttry {\r\n\t\t\tThread {\r\n\t\t\t\trestaurantProductsDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tthis@CartActivity.applicationContext,\r\n\t\t\t\t\tRestaurantProductsDatabase::class.java, RestaurantProductsDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\t\t\t\trestaurantProductsDatabase.resProductsDaoAccess()!!.deleteAll()\r\n\r\n\t\t\t}.start()\r\n\t\t} catch (e: java.lang.Exception) {\r\n\t\t\te.printStackTrace()\r\n\t\t}\r\n\t}\r\n\r\n\tprivate fun getStoreDetails() {\r\n\t\tstoreViewModel?.getStoreDetails(\r\n\t\t\taccountId,\r\n\t\t\taccessToken,\r\n\t\t\tstoreId,\r\n\t\t\t\"\",\r\n\t\t\t\"\",\r\n\t\t\t\"\"\r\n\t\t)\r\n\t\t//storeDetailsResponce()\r\n\t}\r\n\r\n\toverride fun onResume() {\r\n\t\tsuper.onResume()\r\n\t\tdialog?.setCanceledOnTouchOutside(true)\r\n\t\tstoreId = intent.getStringExtra(\"storeId\").toString()\r\n\r\n\t\taddress_id = SessionTwiclo(this).userAddressId\r\n\r\n\t\tLog.d(\"address_id_____\", \"\" + address_id)\r\n\t\ttv_delivery_address_title.text = selectedAddressTitle\r\n\t\ttv_landmark.text = selectedPreAddressName\r\n\t\tif(NewAddAddressActivityNew.checkCount == 1){\r\n\t\t\t        getAddress()\r\n\r\n\t\t\t//\t\tNewAddAddressActivityNew.checkCount = 0\r\n\t\t\t//tv_delivery_address.text = currentlyAddedAddress\r\n\t\t}\r\n\t\telse if(NewAddAddressActivityNew.checkCount == 0){\r\n\t\t\ttv_delivery_address.text = selectedAddressName\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttv_delivery_address.text = selectedAddressName\r\n\t\t}\r\n\r\n\r\n\t\tif (!isNetworkConnected) {\r\n\t\t\tshowInternetToast()\r\n\t\t} else {\r\n\t\t\tshowIOSProgress()\r\n\t\t\tviewmodel?.getCartCountApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken\r\n\t\t\t)\r\n\t\t\tstoreDetailsResponce()\r\n\r\n\t\t\tviewmodelusertrack?.customerActivityLog(\r\n\t\t\t\taccountId,\r\n\t\t\t\tSessionTwiclo(this).mobileno,\r\n\t\t\t\t\"CartView Screen\",\r\n\t\t\t\tSplashActivity.appversion,\r\n\t\t\t\tStoreListActivity.serive_id_,\r\n\t\t\t\tSessionTwiclo(this).deviceToken\r\n\t\t\t)\r\n\r\n\t\t}\r\n\r\n\t\tif (SessionTwiclo(this).userAddressId != \"\") {\r\n\t\t\ttv_delivery_address_title.text = selectedAddressTitle\r\n\t\t}\r\n\r\n\t\tif (selectedCouponName != \"\") {\r\n\t\t\ttv_coupon.text = selectedCouponName\r\n\t\t\tviewmodel?.applyPromoApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\tselectedCouponName\r\n\t\t\t)\r\n\t\t}\r\n\r\n\r\n\t\ttry {\r\n\t\t\tif (isNetworkConnected) {\r\n\t\t\t\tif (SessionTwiclo(this).isLoggedIn) {\r\n\t\t\t\t\tviewmodel?.checkPaymentStatusApi(\r\n\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\taccessToken\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch (e:Exception){}\r\n\r\n\t}\r\n\r\n\tprivate fun storeDetailsResponce() {\r\n\t\tstoreViewModel?.getStoreDetailsApi?.observe(this) { storeData ->\r\n\t\t\tLog.e(\"storeDataCartActivity\", Gson().toJson(storeData))\r\n\t\t\tdismissIOSProgress()\r\n\t\t\ttry {\r\n\t\t\t\tstoreLat = storeData.storeLatitude\r\n\t\t\t\tstoreLong = storeData.storeLongitude\r\n\t\t\t\tLog.e(\"storeDataCartActivity__\", \"$storeLat---$storeLong\")\r\n\t\t\t\t//calculateStoreCustomerDistance()\r\n\r\n\t\t\t\tif (storeData.category.size != 0) {\r\n\t\t\t\t\tfor (i in 0 until storeData.category.size) {\r\n\t\t\t\t\t\tfor (j in 0 until storeData.category[i].product.size) {\r\n\t\t\t\t\t\t\tval productData = storeData.category[i].product[j]\r\n\t\t\t\t\t\t\tif (product_id.equals(productData.productId)) {\r\n\t\t\t\t\t\t\t\tvar customNamesList_: ArrayList<String>? = ArrayList()\r\n\r\n\t\t\t\t\t\t\t\tif (productData.customizeItem!!.size != 0) {\r\n\t\t\t\t\t\t\t\t\tfor (k in 0 until storeData.category[i].product[j].customizeItem.size) {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\tvar lastCustomized: String = \"\"\r\n\t\t\t\t\t\t\t\t\t\t\tval productData =\r\n\t\t\t\t\t\t\t\t\t\t\t\tstoreData.category[i].product[j].customizeItem[k]\r\n\t\t\t\t\t\t\t\t\t\t\tlastCustomized = productData.subCatName\r\n\t\t\t\t\t\t\t\t\t\t\tcustomNamesList_!!.add(lastCustomized)\r\n\t\t\t\t\t\t\t\t\t\t\tval s: Set<String> =\r\n\t\t\t\t\t\t\t\t\t\t\t\tLinkedHashSet<String>(customNamesList_)\r\n\t\t\t\t\t\t\t\t\t\t\tcustomNamesList_.clear()\r\n\t\t\t\t\t\t\t\t\t\t\tcustomNamesList_.addAll(s)\r\n\t\t\t\t\t\t\t\t\t\t} catch (e: Exception) {\r\n\t\t\t\t\t\t\t\t\t\t\te.printStackTrace()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar lastCustomized: String = \"\"\r\n\t\t\t\t\t\t\t\t\tlastCustomized = customNamesList_.toString()\r\n\t\t\t\t\t\t\t\t\tval regex = \"\\\\[|\\\\]\"\r\n\t\t\t\t\t\t\t\t\tlastCustomized_str = lastCustomized.replace(regex.toRegex(), \"\")\r\n\t\t\t\t\t\t\t\t\tLog.e(\"lastCustomized_str___\", lastCustomized_str)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tupdateProductCustomized(\r\n\t\t\t\t\t\t\t\t\tproductData.cartQuantity,\r\n\t\t\t\t\t\t\t\t\tproductData.productId,\r\n\t\t\t\t\t\t\t\t\tproductData.is_customize_quantity,\r\n\t\t\t\t\t\t\t\t\tlastCustomized_str\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewmodel?.getCartDetails(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\tuserLat,\r\n\t\t\t\t\tuserLong\r\n\t\t\t\t)\r\n\t\t\t} catch (e: java.lang.Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\r\n\t\t\t//calculateStoreCustomerDistance(it.storeLatitude+\",\"+it.storeLongitude, SessionTwiclo(this).userLat+\",\"+SessionTwiclo(this).userLng)\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate fun startPayment(razorpayOrderId: String?) {\r\n\t\t/* Instantiate Checkout\r\n\t\t */\r\n\t\tval activity: Activity = this\r\n\t\tval co = Checkout()\r\n\t\t//var razorpayId = \"qwerty\"\r\n\r\n\t\t//  val razorpayOrderId = OrderPlaceModel().razorPayOrderId\r\n\t\tif (razorpayOrderId != null) {\r\n\t\t\tLog.e(\"razorpayOrderId\", razorpayOrderId)\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tval options = JSONObject()\r\n\t\t\toptions.put(\"name\", \"FIDOO\")\r\n\t\t\toptions.put(\"description\", \"Charges\")\r\n\t\t\t//You can omit the image option to fetch the image from dashboard\r\n\t\t\toptions.put(\"image\", \"https://fidoo.in/include/assets/fidoo-logo.jpg\")\r\n\t\t\toptions.put(\"theme.color\", \"#339347\");\r\n\t\t\toptions.put(\"currency\", \"INR\")\r\n\t\t\toptions.put(\"order_id\", razorpayOrderId)\r\n\t\t\t//Log.e(\"RAZORPAY\", \"\")\r\n\t\t\tvar amount = 0.0f\r\n\t\t\ttry {\r\n\t\t\t\tval rounded = totalAmount.toBigDecimal().setScale(2, RoundingMode.UP).toDouble()\r\n\r\n\t\t\t\tLog.e(\"totalAmount\", rounded.toString())\r\n\t\t\t\tamount = rounded.toFloat()\r\n\t\t\t\t//showToast(\"\"+amount)\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\t\t\tLog.e(\"_\", (amount * 100).toString())\r\n\r\n\t\t\toptions.put(\"amount\", amount * 100)\r\n\r\n\t\t\tval prefill = JSONObject()\r\n\t\t\tif (SessionTwiclo(this).profileDetail != null) {\r\n\t\t\t\tprefill.put(\"email\", SessionTwiclo(this).profileDetail.account.emailid)\r\n\t\t\t\tprefill.put(\r\n\t\t\t\t\t\"contact\",\r\n\t\t\t\t\tSessionTwiclo(this).profileDetail.account.countryCode + SessionTwiclo(this).profileDetail.account.userName\r\n\t\t\t\t)\r\n\t\t\t\toptions.put(\"prefill\", prefill)\r\n\t\t\t} else {\r\n\t\t\t\tprefill.put(\"email\", SessionTwiclo(this).loginDetail.account.emailid)\r\n\t\t\t\tprefill.put(\r\n\t\t\t\t\t\"contact\",\r\n\t\t\t\t\t\"+91\" + SessionTwiclo(this).loginDetail.account.userName\r\n\t\t\t\t)\r\n\t\t\t\toptions.put(\"prefill\", prefill)\r\n\t\t\t}\r\n\r\n\t\t\tco.open(activity, options)\r\n\t\t} catch (e: java.lang.Exception) {\r\n\t\t\tToast.makeText(activity, \"Error in payment, please try again\", Toast.LENGTH_LONG).show()\r\n\t\t\te.printStackTrace()\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toverride fun onPaymentError(errorCode: Int, response: String?) {\r\n\t\tLog.d(\"onPaymentError\", \"$errorCode--$response\")\r\n\t\ttry {\r\n\t\t\tviewmodelusertrack?.customerActivityLog(\r\n\t\t\t\taccountId,\r\n\t\t\t\tSessionTwiclo(this).mobileno,\r\n\t\t\t\t\"CartView Screen On Payment fialed\",\r\n\t\t\t\tSplashActivity.appversion,\r\n\t\t\t\tStoreListActivity.serive_id_,\r\n\t\t\t\tSessionTwiclo(this).deviceToken\r\n\t\t\t)\r\n\t\t\t//Toast.makeText(this, \"Payment failed, Please try again\", Toast.LENGTH_LONG).show()\r\n\t\t\t//payment_failed_Diolog()\r\n\r\n\r\n\t\t\tviewmodel?.paymentFailureApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\ttempOrderId\r\n\t\t\t)\r\n\r\n\r\n\t\t} catch (e: java.lang.Exception) {\r\n\t\t\tLog.e(\"onError\", \"Exception in onPaymentSuccess\", e)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toverride fun onPaymentSuccess(razorpayPaymentId: String?) {\r\n\t\ttry {\r\n\t\t\tproceedClick = 0\r\n\t\t\t//  Log.d(\"tempOrderId___\",tempOrderId)\r\n\t\t\tviewmodel?.paymentApi(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\ttempOrderId,\r\n\t\t\t\trazorpayPaymentId!!,\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"online\",other_taxes_and_charges\r\n\t\t\t)\r\n\r\n\t\t\tviewmodelusertrack?.customerActivityLog(\r\n\t\t\t\taccountId,\r\n\t\t\t\tSessionTwiclo(this).mobileno,\r\n\t\t\t\t\"CartView Screen On Payment Successfull\",\r\n\t\t\t\tSplashActivity.appversion,\r\n\t\t\t\tStoreListActivity.serive_id_,\r\n\t\t\t\tSessionTwiclo(this).deviceToken\r\n\t\t\t)\r\n\r\n\t\t\tpaySuccessPopUp()\r\n\t\t} catch (e: java.lang.Exception) {\r\n\t\t\tLog.e(\"onSuccess\", \"Exception in onPaymentSuccess\", e)\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun onActivityResult(\r\n\t\trequestCode: Int,\r\n\t\tresultCode: Int,\r\n\t\tdata: Intent?\r\n\t) {\r\n\t\tsuper.onActivityResult(requestCode, resultCode, data)\r\n\r\n\t\t// Result Code is -1 send from Payumoney activity\r\n\t\tLog.d(\"cartActivity__\", \"request code $requestCode resultcode $resultCode\")\r\n\t\tif (requestCode == Checkout.RZP_REQUEST_CODE && resultCode == RESULT_OK && data != null)\r\n\t\telse {\r\n\t\t\twhen (resultCode) {\r\n\t\t\t\tActivity.RESULT_OK -> {\r\n\t\t\t\t\t//Image Uri will not be null for RESULT_OK\r\n\t\t\t\t\tLog.e(\"RESULTCODE\", resultCode.toString())\r\n\t\t\t\t\tLog.e(\"data\", data.toString())\r\n\t\t\t\t\tfileUri = data?.data\r\n\t\t\t\t\tprescriptionImg.setImageURI(fileUri)\r\n\t\t\t\t\t//You can get File object from intent\r\n\t\t\t\t\tval file: File = ImagePicker.getFile(data)!!\r\n\t\t\t\t\t//You can also get File Path from intent\r\n\t\t\t\t\tval filePath: String = ImagePicker.getFilePath(data)!!\r\n\t\t\t\t\tfilePathTemp = filePath\r\n\t\t\t\t\tLog.e(\"filePath_\", filePath)\r\n\t\t\t\t\tuplaodGallaryImage(filePath!!)\r\n\r\n\t\t\t\t}\r\n\t\t\t\tImagePicker.RESULT_ERROR -> {\r\n\t\t\t\t\tToast.makeText(this, ImagePicker.getError(data), Toast.LENGTH_SHORT).show()\r\n\t\t\t\t}\r\n\t\t\t\telse -> {\r\n//\t\t\t\t\tToast.makeText(this, \"Please upload your prescription\", Toast.LENGTH_SHORT) .show()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (resultCode == FORADDRESS_REQUEST_CODE) {\r\n\t\t\t\tLog.v(\"userAddressId\", SessionTwiclo(this).userAddressId)\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\toverride fun onItemClick(\r\n\t\tproductId: String?,\r\n\t\ttype: String?,\r\n\t\tcount: String?,\r\n\t\tofferPrice: String?,\r\n\t\tcustomize_count: Int?,\r\n\t\tproductType: String?,\r\n\t\tcart_id: String?\r\n\t) {\r\n\r\n\t\tval builder = AlertDialog.Builder(this)\r\n\t\tbuilder.setTitle(\"Remove\")\r\n\t\tbuilder.setMessage(\"Are you sure you want to remove this item?\")\r\n\t\tbuilder.setIcon(R.drawable.about_icon)\r\n\t\tbuilder.setPositiveButton(\"Yes\") { dialogInterface, which ->\r\n\r\n\t\t\tif (isNetworkConnected) {\r\n\t\t\t\tshowIOSProgress()\r\n\t\t\t\tif (cart_id != null) {\r\n\t\t\t\t\tproduct_id = productId\r\n\r\n\t\t\t\t\tupdateProductS(0, productId!!)\r\n\t\t\t\t\tupdateProductRestaurant(0, productId!!)\r\n\t\t\t\t\tviewmodel?.deleteCartDetails(\r\n\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\taccessToken, productId!!,\r\n\t\t\t\t\t\tcart_id\r\n\t\t\t\t\t)\r\n\t\t\t\t\tonresumeHandle = 1\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tshowInternetToast()\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuilder.setNegativeButton(\"No\") { dialogInterface, which ->\r\n\t\t}\r\n\t\tval alertDialog: AlertDialog = builder.create()\r\n\t\talertDialog.setCancelable(false)\r\n\t\talertDialog.show()\r\n\t}\r\n\r\n\t//prescription database\r\n\tprivate fun prescriptiontInsert(\r\n\t\tpres_id: Int,\r\n\t\timage: String,\r\n\t\tfile_path: String,\r\n\t\tdocument_id: String\r\n\t) {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\tprescriptionDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tPrescriptionDatabase::class.java, PrescriptionDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\t\t\t\tprescriptionDatabase!!.prescriptionDao()!!\r\n\t\t\t\t\t.insertPrescriptionView(\r\n\t\t\t\t\t\tPrescriptionViewEntity(\r\n\t\t\t\t\t\t\tpres_id.toString(),\r\n\t\t\t\t\t\t\timage,\r\n\t\t\t\t\t\t\tfile_path,\r\n\t\t\t\t\t\t\tdocument_id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\tgetPresciption()\r\n\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\r\n\t\t}.start()\r\n\t} //prescription database\r\n\r\n\r\n\tprivate fun prescriptiontUpdate(\r\n\t\tpres_id: Int,\r\n\t\timage: String,\r\n\t\tfile_path: String,\r\n\t\tdocument_id: String\r\n\t) {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\tprescriptionDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tPrescriptionDatabase::class.java, PrescriptionDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\r\n\t\t\t\tprescriptionDatabase!!.prescriptionDao()!!.updatePrescriptionView(pres_id, image, file_path!!, document_id)\r\n\t\t\t\tgetPresciption()\r\n\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\t\t}.start()\r\n\t}\r\n\r\n\t//getprescription\r\n\tprivate fun getPresciption() {\r\n\t\tHandler().postDelayed(\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdismissIOSProgress()\r\n\t\t\t\t\tprescriptionDatabase!!.prescriptionDao()!!.getPrescriptionView().observe(this, {\r\n\t\t\t\t\t\tarraylist = it as ArrayList\r\n\t\t\t\t\t\tLog.e(\"presasb_\", arraylist!!.size.toString())\r\n\r\n\t\t\t\t\t\tprescriptionAdapter = PrescriptionAdapter(\r\n\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\tarraylist!!,\r\n\t\t\t\t\t\t\tobject : PrescriptionAdapter.OnClickPrescription {\r\n\t\t\t\t\t\t\t\toverride fun clearImage(\r\n\t\t\t\t\t\t\t\t\tposition: Int,\r\n\t\t\t\t\t\t\t\t\tmodel: PrescriptionViewEntity\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\t\t\t\t\tdeletePrecription(model.pres_id.toInt())\r\n\t\t\t\t\t\t\t\t\tviewmodel?.deletePrescriptionApi(\r\n\t\t\t\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\t\t\t\tmodel.document_id\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\toverride fun uploadImage(\r\n\t\t\t\t\t\t\t\t\tposition: Int,\r\n\t\t\t\t\t\t\t\t\tmodel: PrescriptionViewEntity\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tprescription_id = model.pres_id.toInt()\r\n\t\t\t\t\t\t\t\t\tImagePicker.with(this@CartActivity)\r\n\t\t\t\t\t\t\t\t\t\t.crop()                    //Crop image(Optional), Check Customization for more option\r\n\t\t\t\t\t\t\t\t\t\t//   .compress(1024)\t\t\t//Final image size will be less than 1 MB(Optional)\r\n\t\t\t\t\t\t\t\t\t\t//  .maxResultSize(1080, 1080)\t//Final image resolution will be less than 1080 x 1080(Optional)\r\n\t\t\t\t\t\t\t\t\t\t.start()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\tprescription_rv?.adapter = prescriptionAdapter\r\n\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t} catch (e: Exception) {\r\n\t\t\t\t\te.printStackTrace()\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 100\r\n\t\t)\r\n\t}\r\n\r\n\t//delete prescription\r\n\tprivate fun deletePrecription(pres_id: Int) {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\tprescriptionDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tPrescriptionDatabase::class.java, PrescriptionDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\r\n\t\t\t\tprescriptionDatabase!!.prescriptionDao()!!.deleteItem(pres_id)\r\n\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\t\t}.start()\r\n\t\tgetPresciption()\r\n\r\n\t}\r\n\r\n\t//delete all\r\n\tprivate fun deleteAllPrecription() {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\tprescriptionDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tPrescriptionDatabase::class.java, PrescriptionDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\r\n\t\t\t\tprescriptionDatabase!!.prescriptionDao()!!.deleteAllItem()\r\n\r\n\t\t\t\tgetPresciption()\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\r\n\t\t}.start()\r\n\t}\r\n\r\n\t//update database\r\n\tprivate fun updateProductS(count: Int, productId: String) {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\tproductsDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tProductsDatabase::class.java, ProductsDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\t\t\t\tproductsDatabase!!.productsDaoAccess()!!.updateProducts(count.toInt(), productId!!)\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\r\n\t\t}.start()\r\n\t}\r\n\r\n\t//update database by restaurants\r\n\tprivate fun updateProductRestaurant(count: Int, productId: String) {\r\n\t\tThread {\r\n\t\t\ttry {\r\n\t\t\t\trestaurantProductsDatabase = Room.databaseBuilder(\r\n\t\t\t\t\tapplicationContext,\r\n\t\t\t\t\tRestaurantProductsDatabase::class.java, RestaurantProductsDatabase.DB_NAME\r\n\t\t\t\t)\r\n\t\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t\t.build()\r\n\t\t\t\trestaurantProductsDatabase!!.resProductsDaoAccess()!!\r\n\t\t\t\t\t.updateProducts(count.toInt(), productId!!)\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\r\n\t\t}.start()\r\n\t}\r\n\r\n\tprivate fun updateProductCustomized(\r\n\t\tcount: Int,\r\n\t\tproductId: String,\r\n\t\tcustomize_quantity: Int?,\r\n\t\tcustomizeItemName: String?\r\n\t) {\r\n\t\tThread {\r\n\t\t\trestaurantProductsDatabase = Room.databaseBuilder(\r\n\t\t\t\tapplicationContext,\r\n\t\t\t\tRestaurantProductsDatabase::class.java, RestaurantProductsDatabase.DB_NAME\r\n\t\t\t)\r\n\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t.build()\r\n\t\t\trestaurantProductsDatabase!!.resProductsDaoAccess()!!.updateCustomizeProducts(\r\n\t\t\t\tcount,\r\n\t\t\t\tproductId!!,\r\n\t\t\t\tcustomize_quantity!!,\r\n\t\t\t\tcustomizeItemName\r\n\t\t\t)\r\n\r\n\t\t}.start()\r\n\t}\r\n\r\n\r\n\tprivate fun updateByCartIdProductCustomized(\r\n\t\tcount: Int,\r\n\t\tproductId: String,\r\n\t\tcustomize_quantity: Int?,\r\n\t\tcustomizeItemName: String?,\r\n\t\tcart_id: String?,\r\n\t\tproduct_customize_Id: String?\r\n\t) {\r\n\t\tThread {\r\n\t\t\trestaurantProductsDatabase = Room.databaseBuilder(\r\n\t\t\t\tapplicationContext,\r\n\t\t\t\tRestaurantProductsDatabase::class.java, RestaurantProductsDatabase.DB_NAME\r\n\t\t\t)\r\n\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t.build()\r\n\t\t\trestaurantProductsDatabase!!.resProductsDaoAccess()!!.customizeProductUpdate(\r\n\t\t\t\tcount,\r\n\t\t\t\tproductId!!,\r\n\t\t\t\tcustomize_quantity!!,\r\n\t\t\t\tcustomizeItemName,\r\n\t\t\t\tcart_id,\r\n\t\t\t\tproduct_customize_Id\r\n\t\t\t)\r\n\r\n\t\t}.start()\r\n\t}\r\n\r\n\tfun uplaodGallaryImage(mImagePth: String?) {\r\n\t\tLog.e(\"mImagePth\", mImagePth.toString())\r\n\t\tLog.e(\"accountId\", SessionTwiclo(this).loggedInUserDetail.accountId.toString())\r\n\t\tLog.e(\"accessToken\", SessionTwiclo(this).loggedInUserDetail.accessToken.toString())\r\n\r\n\t\tvar mImageParts: MultipartBody.Part? = null\r\n\t\t// creating image format for upload\r\n\r\n\t\tmImageParts = if (!TextUtils.isEmpty(mImagePth)) {\r\n\t\t\tval file = File(mImagePth)\r\n\t\t\tval requestFile = RequestBody.create(\"multipart/form-data\".toMediaTypeOrNull(), file)\r\n\t\t\tMultipartBody.Part.createFormData(\"document\", file.name, requestFile)\r\n\t\t} else {\r\n\t\t\tval requestFile = RequestBody.create(\"multipart/form-data\".toMediaTypeOrNull(), \"\")\r\n\t\t\tMultipartBody.Part.createFormData(\"document\", \"\", requestFile)\r\n\t\t}\r\n\r\n\t\t// Parameter request body\r\n\t\tval accountId = RequestBody.create(\"text/plain\".toMediaTypeOrNull(), accountId)\r\n\t\tval accessToken = RequestBody.create(\"text/plain\".toMediaTypeOrNull(), accessToken)\r\n\r\n\t\tshowIOSProgress()\r\n\t\tcart_payment_lay.isEnabled = false\r\n\t\tcart_payment_lay.alpha = 0.2f\r\n\t\tviewmodel?.uploadPrescriptionImage(\r\n\t\t\taccountId,\r\n\t\t\taccessToken, mImageParts\r\n\t\t)\r\n\t\tselect_address_or_add_layout.visibility = View.GONE\r\n\t}\r\n\r\n\toverride fun onIdSelected(\r\n\t\tproductId: String?,\r\n\t\ttype: String?,\r\n\t\tprice: String?,\r\n\t\tsub_cat_name: String?,\r\n\t\ttempSelectionCount: Int\r\n\t) {\r\n\t\tif (type.equals(\"select\")) {\r\n\r\n\t\t\tif (productId != null) {\r\n\t\t\t\tcustomIdsList!!.add(productId)\r\n\t\t\t}\r\n\t\t\tval customCheckBoxModel =\r\n\t\t\t\tCustomCheckBoxModel()\r\n\t\t\tcustomCheckBoxModel.id = productId\r\n\t\t\tcustomCheckBoxModel.price = price\r\n\r\n\t\t\tcustomIdsListTemp!!.add(customCheckBoxModel)\r\n\t\t} else {\r\n\r\n\t\t\tfor (i in 0..customIdsList!!.size - 1) {\r\n\t\t\t\tif (customIdsList!!.get(i).equals(productId)) {\r\n\t\t\t\t\tcustomIdsList!!.removeAt(i)\r\n\t\t\t\t\tcustomIdsListTemp!!.removeAt(i)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tempPrice: Double? = 0.0\r\n\t\tfor (i in 0..customIdsListTemp!!.size - 1) {\r\n\t\t\ttempPrice = tempPrice!! + customIdsListTemp!!.get(i).price.toDouble()\r\n\t\t}\r\n\r\n\t\tfor (i in 0..categoryy!!.size - 1) {\r\n\t\t\ttempPrice = tempPrice!! + categoryy!!.get(i).price.toDouble()\r\n\t\t}\r\n\r\n\t\ttempPrice = tempOfferPrice!!.toDouble() + tempPrice!!\r\n\t\t// customAddBtn.text = resources.getString(R.string.ruppee) + tempPrice.toString()\r\n\t\tcustomAddBtn.text = \"Add | \" + resources.getString(R.string.ruppee) + tempPrice.toString()\r\n\r\n\t}\r\n\r\n\toverride fun onStart() {\r\n\t\tsuper.onStart()\r\n//\t\tif(NewAddAddressActivityNew.checkCount == 1){\r\n//\t\t\t//getAddress()\r\n//\t\t\t//\t\tNewAddAddressActivityNew.checkCount = 0\r\n//\r\n//\t\t\ttv_delivery_address.text = currentlyAddedAddress\r\n//\t\t}\r\n\t}\r\n\r\n\toverride fun onCustomRadioClick(checkedId: String?, position: String?) {\r\n\r\n\t\tvar tempCat: String? = \"\"\r\n\t\tvar tempPrice: String? = \"\"\r\n\t\tfor (i in 0 until mModelDataTemp?.category!!.size) {\r\n\r\n\t\t\tfor (j in 0 until mModelDataTemp?.category!!.get(i).subCat.size) {\r\n\r\n\t\t\t\tif (checkedId == mModelDataTemp?.category!!.get(i).subCat.get(j).id) {\r\n\t\t\t\t\ttempCat = mModelDataTemp?.category!!.get(i).catId\r\n\t\t\t\t\ttempPrice = mModelDataTemp?.category!!.get(i).subCat.get(j).price\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!tempCat.equals(\"\")) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tvar tempAddEdit: String? = \"add\"\r\n\t\tvar tempAddEditId: String? = \"add\"\r\n\r\n\t\tfor (i in 0..categoryy!!.size - 1) {\r\n\r\n\t\t\tif (categoryy!!.get(i).category.equals(tempCat)) {\r\n\t\t\t\t/*  var customListModel: CustomListModel?= CustomListModel()\r\n\t\t\t\t  customListModel!!.category= category.get(i).catId\r\n\t\t\t\t  customListModel!!.id= category.get(i).subCat.get(0).id.toInt()*/\r\n\t\t\t\ttempAddEdit = \"edit\"\r\n\t\t\t\ttempAddEditId = i.toString()\r\n\t\t\t\tcategoryy!!.get(i).id = checkedId!!.toInt()\r\n\t\t\t\tcategoryy!!.get(i).price = tempPrice\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (tempAddEdit.equals(\"edit\")) {\r\n\r\n\t\t\tcategoryy!!.get(tempAddEditId!!.toInt()).id = checkedId!!.toInt()\r\n\t\t\tcategoryy!!.get(tempAddEditId.toInt()).price = tempPrice\r\n\r\n\t\t} else {\r\n\r\n\t\t\tval customListModel: CustomListModel =\r\n\t\t\t\tCustomListModel()\r\n\t\t\tcustomListModel!!.category = tempCat\r\n\t\t\tcustomListModel.id = checkedId!!.toInt()\r\n\t\t\tcustomListModel.price = tempPrice\r\n\t\t\tcategoryy!!.add(customListModel)\r\n\r\n\t\t}\r\n\r\n\t\tvar tempPricee: Double? = 0.0\r\n\r\n\t\tfor (i in 0..customIdsListTemp!!.size - 1) {\r\n\t\t\ttempPricee = tempPricee!! + customIdsListTemp!!.get(i).price.toDouble()\r\n\t\t}\r\n\r\n\t\tfor (i in 0..categoryy!!.size - 1) {\r\n\t\t\ttempPricee = tempPricee!! + categoryy!!.get(i).price.toDouble()\r\n\t\t}\r\n\r\n\t\ttempPricee = tempOfferPrice!!.toDouble() + tempPricee!!\r\n\t\tcustomAddBtn.text = \"Add | \" + resources.getString(R.string.ruppee) + tempPricee.toString()\r\n\r\n\t}\r\n\r\n\toverride fun onAddItemClick(\r\n\t\tproductId: String?,\r\n\t\titems: String?,\r\n\t\tofferPrice: String?,\r\n\t\tisCustomize: String?,\r\n\t\tprodcustCustomizeId: String?,\r\n\t\tcart_id: String?,\r\n\t\tcart_quan: String?\r\n\t) {\r\n\t\tproduct_id = productId\r\n\t\tLog.d(\r\n\t\t\t\"onAddItemClick__\",\r\n\t\t\t\"$product_id$items$offerPrice$isCustomize$prodcustCustomizeId$cart_id$cart_quan\"\r\n\t\t)\r\n\t\tif (!isNetworkConnected) {\r\n\t\t\tshowToast(resources.getString(R.string.provide_internet))\r\n\t\t} else {\r\n\r\n\t\t\tif (!items.equals(\"\") || isCustomize.equals(\"1\")) {\r\n\t\t\t\ttempOfferPrice = offerPrice\r\n\t\t\t\ttempProductId = productId\r\n\t\t\t\tval builder = AlertDialog.Builder(this)\r\n\t\t\t\tbuilder.setTitle(\"Your previous customization\")\r\n\t\t\t\tbuilder.setMessage(items)\r\n\t\t\t\t// builder.setIcon(android.R.drawable.ic_dialog_alert)\r\n\t\t\t\tbuilder.setPositiveButton(\"I'LL CHOOSE\") { dialogInterface, which ->\r\n\t\t\t\t\tif (behavior.state != BottomSheetBehavior.STATE_EXPANDED) {\r\n\t\t\t\t\t\tbehavior.setState(BottomSheetBehavior.STATE_EXPANDED)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbehavior.setState(BottomSheetBehavior.STATE_COLLAPSED)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//  tempProductId = productId\r\n\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\tcustomIdsList!!.clear()\r\n\r\n\t\t\t\t\tif (productId != null) {\r\n\t\t\t\t\t\tviewmodel?.customizeProductApi(\r\n\t\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\t\tproductId\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuilder.setNegativeButton(\"REPEAT\") { dialogInterface, which ->\r\n\t\t\t\t\tshowIOSProgress()\r\n\t\t\t\t\tupdateProductS(cart_quan!!.toInt(), productId!!)\r\n\t\t\t\t\tupdateProductRestaurant(cart_quan!!.toInt(), productId!!)\r\n\r\n\t\t\t\t\tviewmodel?.addRemoveCartDetails(\r\n\t\t\t\t\t\taccountId,\r\n\t\t\t\t\t\taccessToken,\r\n\t\t\t\t\t\tproductId,\r\n\t\t\t\t\t\t\"add\",\r\n\t\t\t\t\t\tisCustomize!!,\r\n\t\t\t\t\t\tprodcustCustomizeId!!,\r\n\t\t\t\t\t\tcart_id!!,\r\n\t\t\t\t\t\tcustomIdsList!!\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tval alertDialog: AlertDialog = builder.create()\r\n\t\t\t\talertDialog.setCancelable(true)\r\n\t\t\t\talertDialog.show()\r\n\t\t\t} else {\r\n\t\t\t\tshowIOSProgress()\r\n\t\t\t\tupdateProductS(cart_quan!!.toInt(), productId!!)\r\n\t\t\t\tupdateProductRestaurant(cart_quan!!.toInt(), productId!!)\r\n\t\t\t\tonresumeHandle = 1\r\n\t\t\t\tproduct_valueUpdate = 1\r\n\r\n\t\t\t\tviewmodel?.addRemoveCartDetails(\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\taccessToken,\r\n\t\t\t\t\tproductId,\r\n\t\t\t\t\t\"add\",\r\n\t\t\t\t\tisCustomize!!,\r\n\t\t\t\t\tprodcustCustomizeId!!,\r\n\t\t\t\t\tcart_id!!,\r\n\t\t\t\t\tcustomIdsList!!\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\toverride fun onRemoveItemClick(\r\n\t\tproductId: String?,\r\n\t\tquantity: String?,\r\n\t\tisCustomize: String?,\r\n\t\tprodcustCustomizeId: String?,\r\n\t\tcart_id: String?,\r\n\t\tcart_quan: String?\r\n\t) {\r\n\t\tproduct_id = productId\r\n\t\tif (!isNetworkConnected) {\r\n\t\t\tshowToast(resources.getString(R.string.provide_internet))\r\n\r\n\t\t} else {\r\n\t\t\tLog.d(\"isCustomize__\", isCustomize!!)\r\n\t\t\tshowIOSProgress()\r\n\t\t\tupdateProductS(cart_quan!!.toInt(), productId!!)\r\n\t\t\tif (!isCustomize.equals(\"1\")) {\r\n\t\t\t\tupdateProductRestaurant(cart_quan!!.toInt(), productId!!)\r\n\t\t\t}\r\n\t\t\tonresumeHandle = 1\r\n\t\t\tproduct_valueUpdate = 1\r\n\r\n\t\t\tviewmodel?.addRemoveCartDetails(\r\n\t\t\t\taccountId,\r\n\t\t\t\taccessToken,\r\n\t\t\t\tproductId,\r\n\t\t\t\t\"remove\",\r\n\t\t\t\tisCustomize!!,\r\n\t\t\t\tprodcustCustomizeId!!,\r\n\t\t\t\tcart_id!!,\r\n\t\t\t\tcustomIdsList!!\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t//AIzaSyBB7qiqrzaHv09qpdJ9erY8oZXscyA7TEY\r\n\r\n\tfun calculateStoreCustomerDistance() {\r\n\t\tval source = userLat + \",\" + userLong\r\n\t\tval destination = storeLat + \",\" + storeLong\r\n\t\tval urlDirections =\r\n\t\t\t\"https://maps.googleapis.com/maps/api/directions/json?origin=$source&destination=$destination&key=AIzaSyBB7qiqrzaHv09qpdJ9erY8oZXscyA7TEY\"\r\n\t\tLog.e(\"urlDirections\", urlDirections)\r\n\t\tvar dist_: Float = 0f\r\n\t\tval directionsRequest = object :\r\n\t\t\tStringRequest(Request.Method.GET, urlDirections, Response.Listener<String> { response ->\r\n\t\t\t\tval jsonResponse = JSONObject(response)\r\n\t\t\t\tdismissIOSProgress()\r\n\t\t\t\tLog.e(\"res_routes\", \"routes- $jsonResponse\")\r\n\t\t\t\tvar status = jsonResponse.optString(\"status\")\r\n\t\t\t\tif (!status.equals(\"ZERO_RESULTS\")) {\r\n\t\t\t\t\tval routes = jsonResponse.optJSONArray(\"routes\")\r\n\t\t\t\t\tif (routes.length() != 0) {\r\n\t\t\t\t\t\tval legs = routes.optJSONObject(0).optJSONArray(\"legs\")\r\n\t\t\t\t\t\tval distance =\r\n\t\t\t\t\t\t\tlegs.optJSONObject(0).optJSONObject(\"distance\").get(\"value\").toString()\r\n\t\t\t\t\t\tval distanceTex =\r\n\t\t\t\t\t\t\tlegs.optJSONObject(0).optJSONObject(\"distance\").getInt(\"value\")\r\n\t\t\t\t\t\tLog.e(\"distance_\", distanceTex.toString())\r\n\r\n\t\t\t\t\t\tstart_Lat = legs.optJSONObject(0).optJSONObject(\"start_location\").opt(\"lat\")\r\n\t\t\t\t\t\t\t.toString().toDouble()\r\n\t\t\t\t\t\tstart_Lng = legs.optJSONObject(0).optJSONObject(\"start_location\").opt(\"lng\")\r\n\t\t\t\t\t\t\t.toString().toDouble()\r\n\t\t\t\t\t\tgetGeoAddressFromLatLong2(start_Lat!!, start_Lng!!)\r\n\t\t\t\t\t\tend_Lat = legs.optJSONObject(0).optJSONObject(\"end_location\").opt(\"lat\")\r\n\t\t\t\t\t\t\t.toString().toDouble()\r\n\t\t\t\t\t\tend_Lng = legs.optJSONObject(0).optJSONObject(\"end_location\").opt(\"lng\")\r\n\t\t\t\t\t\t\t.toString().toDouble()\r\n\r\n\t\t\t\t\t\tgetGeoAddressFromLatLong2(end_Lat!!, end_Lng!!)\r\n\t\t\t\t\t\tend_point = city.toLowerCase()\r\n\t\t\t\t\t\tstart_point = city.toLowerCase()\r\n\r\n\t\t\t\t\t\tvar start_add = legs.optJSONObject(0).getString(\"start_address\")\r\n\t\t\t\t\t\tvar end_add = legs.optJSONObject(0).getString(\"end_address\")\r\n\r\n\t\t\t\t\t\tvar newStartadd = start_add.contains(\"Gurugram\")\r\n\t\t\t\t\t\tvar newEndadd = end_add.contains(\"Gurugram\")\r\n\r\n\t\t\t\t\t\tLog.d(\r\n\t\t\t\t\t\t\t\"end_point__\",\r\n\t\t\t\t\t\t\tstart_point + \"==\" + end_point + \"----\" + newStartadd + \"---\" + newEndadd\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\tif (newStartadd == true || newEndadd == true) {\r\n\t\t\t\t\t\t\tend_point = \"gurugram\"\r\n\t\t\t\t\t\t\tstart_point = \"gurugram\"\r\n\t\t\t\t\t\t\tif (distanceTex != null && distanceTex < 15000) {\r\n\t\t\t\t\t\t\t\tislocationValid = 1\r\n\t\t\t\t\t\t\t\tif (check == 1) {\r\n\t\t\t\t\t\t\t\t\tplace_order_lay.visibility = View.VISIBLE\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n\t\t\t\t\t\t\t\tshowToast(\"We are not servicable at your location!\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n\t\t\t\t\t\t\tshowToastLong(\"Restaurant is currently unserviceable.\")\r\n\t\t\t\t\t\t}\r\n\r\n//\t\t\t\t\t\tif ((end_point.equals(\"gurugram\") && start_point.equals(\"gurugram\"))\r\n//\t\t\t\t\t\t\t|| (end_point.equals(\"gurgaon\") && start_point.equals(\"gurgaon\"))\r\n//\t\t\t\t\t\t) {\r\n//\r\n//\t\t\t\t\t\t} else {\r\n//\t\t\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n//\t\t\t\t\t\t\tshowToastLong(\"Restaurant is currently unserviceable.\")\r\n//\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//\tshowToast(\"No result found\")\r\n\t\t\t\t\tplace_order_lay.visibility = View.GONE\r\n\r\n\t\t\t\t}\r\n\t\t\t}, Response.ErrorListener { }) {\r\n\t\t}\r\n\t\tval requestQueue = Volley.newRequestQueue(this)\r\n\t\trequestQueue.add(directionsRequest)\r\n\r\n\t}\r\n\r\n\tprivate fun loadImage(url: String) {\r\n\t\tstore_imgStr = url\r\n\t\tGlide.with(this).load(url)\r\n\t\t\t.listener(object : RequestListener<Drawable?> {\r\n\t\t\t\toverride fun onLoadFailed(\r\n\t\t\t\t\te: GlideException?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\toverride fun onResourceReady(\r\n\t\t\t\t\tresource: Drawable?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tdataSource: DataSource,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.placeholder(R.drawable.default_store)\r\n\t\t\t.error(R.drawable.default_store).into(storeImg_oncart)\r\n\t}\r\n\r\n\tprivate fun payment_failed_Diolog() {\r\n\t\tpayment_failed_Diolog = Dialog(this)\r\n\t\tpayment_failed_Diolog?.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n\t\tpayment_failed_Diolog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n\t\tpayment_failed_Diolog?.setContentView(R.layout.payment_failed_popup)\r\n\t\tpayment_failed_Diolog?.window?.setLayout(\r\n\t\t\tWindowManager.LayoutParams.MATCH_PARENT,\r\n\t\t\tWindowManager.LayoutParams.MATCH_PARENT\r\n\t\t)\r\n\r\n\t\tpayment_failed_Diolog?.window?.attributes?.windowAnimations = R.style.diologIntertnet\r\n\t\tpayment_failed_Diolog?.setCanceledOnTouchOutside(true)\r\n\t\tpayment_failed_Diolog?.show()\r\n\t\tval dismiss_paymentFailed =\r\n\t\t\tpayment_failed_Diolog?.findViewById<ImageView>(R.id.dismiss_paymentFailed)\r\n\t\tval gif_paymentImg = payment_failed_Diolog?.findViewById<ImageView>(R.id.gif_paymentImg)\r\n\r\n\t\tGlide.with(this).load(R.drawable.payment_failed)\r\n\t\t\t.listener(object : RequestListener<Drawable?> {\r\n\t\t\t\toverride fun onLoadFailed(\r\n\t\t\t\t\te: GlideException?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\toverride fun onResourceReady(\r\n\t\t\t\t\tresource: Drawable?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tdataSource: DataSource,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.placeholder(R.drawable.payment_failed)\r\n\t\t\t.error(R.drawable.payment_failed).into(gif_paymentImg!!)\r\n\r\n\t\tdismiss_paymentFailed?.setOnClickListener {\r\n\t\t\tpayment_failed_Diolog?.dismiss()\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toverride fun onBackPressed() {\r\n\t\tif (checkItemUpdate == 0) {\r\n\t\t\tAppUtils.finishActivityLeftToRight(this@CartActivity)\r\n\t\t} else {\r\n\t\t\tval returnIntent = Intent()\r\n\t\t\tsetResult(RESULT_OK, returnIntent)\r\n\t\t\tfinish()\r\n\t\t}\r\n\t}\r\n\r\n\tfun paySuccessPopUp() {\r\n\t\tpayment_suc_Diolog = Dialog(this)\r\n\t\tpayment_suc_Diolog?.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n\t\tpayment_suc_Diolog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n\t\tpayment_suc_Diolog?.setContentView(R.layout.payment_success_popup)\r\n\t\tpayment_suc_Diolog?.window?.setLayout(\r\n\t\t\tWindowManager.LayoutParams.MATCH_PARENT,\r\n\t\t\tWindowManager.LayoutParams.MATCH_PARENT\r\n\t\t)\r\n\t\t// payment_suc_Diolog?.window?.attributes?.windowAnimations = R.style.diologIntertnet\r\n\t\tpayment_suc_Diolog?.setCanceledOnTouchOutside(true)\r\n\t\tpayment_suc_Diolog?.show()\r\n\t\tval payment_successImg =\r\n\t\t\tpayment_suc_Diolog?.findViewById<ImageView>(R.id.payment_successImg)\r\n\r\n\t\tGlide.with(this).load(R.drawable.pay_suc)\r\n\t\t\t.listener(object : RequestListener<Drawable?> {\r\n\t\t\t\toverride fun onLoadFailed(\r\n\t\t\t\t\te: GlideException?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\toverride fun onResourceReady(\r\n\t\t\t\t\tresource: Drawable?,\r\n\t\t\t\t\tmodel: Any,\r\n\t\t\t\t\ttarget: Target<Drawable?>,\r\n\t\t\t\t\tdataSource: DataSource,\r\n\t\t\t\t\tisFirstResource: Boolean\r\n\t\t\t\t): Boolean {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.placeholder(R.drawable.pay_suc)\r\n\t\t\t.error(R.drawable.pay_suc).into(payment_successImg!!)\r\n\r\n\t\tHandler().postDelayed({\r\n\t\t\tif (!finalOrderId.equals(\"\")) {\r\n\t\t\t\tSessionTwiclo(this).storeImg = store_imgStr\r\n\t\t\t\tSessionTwiclo(this).orderId = finalOrderId\r\n\t\t\t\tSessionTwiclo(this).storeName = store_nameStr\r\n\t\t\t\tonBackpressHandle = \"1\"\r\n\t\t\t\tstopService(Intent(applicationContext, OrderBackgroundgService::class.java))\r\n\t\t\t\tOrderBackgroundgService.timer_count = 30000\r\n\t\t\t\tOrderBackgroundgService.counter_timer = 30\r\n\t\t\t\thandleTrackScreenOrderSuccess=0\r\n\t\t\t\tstartActivity(\r\n\t\t\t\t\tIntent(this, NewTrackOrderActivity::class.java).putExtra(\r\n\t\t\t\t\t\t\"orderId\",\r\n\t\t\t\t\t\tfinalOrderId\r\n\t\t\t\t\t).putExtra(\r\n\t\t\t\t\t\t\"delivery_boy_name\",\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t).putExtra(\r\n\t\t\t\t\t\t\"delivery_boy_mobile\",\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t).putExtra(\r\n\t\t\t\t\t\t\"type\",\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t).putExtra(\r\n\t\t\t\t\t\t\"serviceTypeId\",\r\n\t\t\t\t\t\tSessionTwiclo(this).serviceId\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\tfinishAffinity()\r\n\t\t\t}\r\n\t\t}, 5000)\r\n\t}\r\n\r\n\toverride fun onPaymentSuccess(p0: String?, p1: PaymentData?){}\r\n\r\n\toverride fun onPaymentError(p0: Int, p1: String?, p2: PaymentData?){}\r\n\r\n\r\n//\toverride fun onRestart() {\r\n//\t\tsuper.onRestart()\r\n//\t\ttry {\r\n//\t\t\tif (isNetworkConnected) {\r\n//\t\t\t\tif (SessionTwiclo(this).isLoggedIn) {\r\n//\t\t\t\t\tviewmodel?.checkPaymentStatusApi(\r\n//\t\t\t\t\t\taccountId,\r\n//\t\t\t\t\t\taccessToken\r\n//\t\t\t\t\t)\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}catch (e:Exception){}\r\n//\t}\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/fidoo/user/cartview/activity/CartActivity.kt b/app/src/main/java/com/fidoo/user/cartview/activity/CartActivity.kt
--- a/app/src/main/java/com/fidoo/user/cartview/activity/CartActivity.kt	(revision 28676070ae8267e01b330865ea2b16620db9dd16)
+++ b/app/src/main/java/com/fidoo/user/cartview/activity/CartActivity.kt	(date 1651839808710)
@@ -464,16 +464,6 @@
 				.start()
 		}
 
-		viewmodel?.getCartDetailsResponse?.observe(this, Observer { user ->
-			val testCartModel: CartModel = user
-
-			if (user.have_standing_balance == "1") {
-				showOutstandingPaymentBottomSheet();
-				Log.i("tesing outstanding", "outstanding payment is there")
-			}
-
-		})
-
 		customAddBtn.setOnClickListener {
 			if (isNetworkConnected) {
 				var mCartId: String? = null
@@ -816,6 +806,10 @@
 
 		viewmodel?.getCartDetailsResponse?.observe(this) { user ->
 			dismissIOSProgress()
+
+			if(user.have_standing_balance == "1") {
+				showOutstandingPaymentBottomSheet()
+			}
 			main_lay.visibility = View.VISIBLE
 			linear_progress_indicator.visibility = View.GONE
 			Log.e("getCartDetailsResponse_", Gson().toJson(user))
