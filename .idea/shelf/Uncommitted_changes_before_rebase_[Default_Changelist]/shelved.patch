Index: app/src/main/java/com/fidoo/user/newsearch/ui/NewSearchActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fidoo.user.newsearch.ui\r\n\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.view.KeyEvent\r\nimport android.view.View\r\nimport android.view.inputmethod.EditorInfo\r\nimport com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory.executor\r\nimport android.widget.AbsListView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.room.Room\r\nimport com.fidoo.user.R\r\nimport com.fidoo.user.dailyneed.ui.CategoryProductListActivity\r\nimport com.fidoo.user.dashboard.listener.ClickEventOfDashboard\r\nimport com.fidoo.user.dashboard.model.newmodel.*\r\nimport com.fidoo.user.data.session.SessionTwiclo\r\nimport com.fidoo.user.databinding.ActivityNewSearchBinding\r\nimport com.fidoo.user.newsearch.adapter.SearchCategoryAdapter\r\nimport com.fidoo.user.newsearch.model.SuggestionX\r\nimport com.fidoo.user.newsearch.viewmodel.SearchNewViewModel\r\nimport com.fidoo.user.restaurants.activity.NewDBStoreItemsActivity\r\nimport com.fidoo.user.restaurants.roomdatabase.database.RestaurantProductsDatabase\r\nimport com.fidoo.user.utils.BaseActivity\r\nimport com.google.gson.Gson\r\nimport com.premsinghdaksha.startactivityanimationlibrary.AppUtils\r\nimport kotlinx.android.synthetic.main.activity_new_search.*\r\nimport kotlinx.android.synthetic.main.fragment_search_new.view.*\r\nimport kotlin.math.log\r\n\r\n\r\nclass NewSearchActivity : BaseActivity(), ClickEventOfDashboard {\r\n\tprivate lateinit var binding: ActivityNewSearchBinding\r\n\tvar search_value: String? = \"\"\r\n\tvar key_value: String? = \"\"\r\n\tvar service_id: String? = \"\"\r\n\tvar sessionTwiclo: SessionTwiclo? = null\r\n\tvar viewModel: SearchNewViewModel? = null\r\n\tvar searchCategoryAdapter: SearchCategoryAdapter? = null\r\n\tvar recentSearch: ArrayList<String>? = null\r\n\r\n\t//for pagination\r\n\tvar totalItem: Int? = 200\r\n\tvar table_count: Int? = 0\r\n\tvar text_count=0\r\n\tvar textchane= false\r\n\tprivate var timer: CountDownTimer? = null\r\n\tprivate var manager: GridLayoutManager? = null\r\n\tprivate var currentItems = 0\r\n\tprivate var page_count = 0\r\n\tprivate var totalItems: Int = 0\r\n\tprivate var scrollOutItems: Int = 0\r\n\tprivate var isScrolling = false\r\n\tprivate var isMore = false\r\n\tprivate var hit = 0\r\n\tprivate var pagecount = 0\r\n\tvar changeLable1: Long = 2\r\n\tvar changeLable2: Long = 4\r\n\r\n\tvar mainList: ArrayList<SuggestionX>? = null\r\n\tvar nonavailable_mainList: ArrayList<SuggestionX>? = null\r\n\tvar latestList: ArrayList<SuggestionX>? = null\r\n\tvar latestList2: ArrayList<SuggestionX>? = null\r\n\tvar latestList3: ArrayList<SuggestionX>? = null\r\n\tvar latestList4: ArrayList<SuggestionX>? = null\r\n\tprivate lateinit var restaurantProductsDatabase: RestaurantProductsDatabase\r\n\r\n\r\n\toverride fun onCreate(savedInstanceState: Bundle?) {\r\n\t\tsuper.onCreate(savedInstanceState)\r\n\t\tbinding = ActivityNewSearchBinding.inflate(layoutInflater)\r\n\t\tsetContentView(binding.root)\r\n\t\tsessionTwiclo = SessionTwiclo(this)\r\n\t\tviewModel = ViewModelProvider(this).get(SearchNewViewModel::class.java)\r\n\t\tmanager = GridLayoutManager(this, 1)\r\n\t\tmainList = ArrayList()\r\n\t\tnonavailable_mainList = ArrayList()\r\n\t\tlatestList = ArrayList()\r\n\t\tlatestList2 = ArrayList()\r\n\t\tlatestList3 = ArrayList()\r\n\t\tlatestList4 = ArrayList()\r\n\t\trecentSearch = ArrayList()\r\n\r\n\r\n\t\ttry {\r\n\t\t\tservice_id = intent.getStringExtra(\"service_id\")\r\n\t\t\tLog.d(\"service_id______\", service_id!!)\r\n\t\t} catch (e: Exception) {\r\n\t\t\te.printStackTrace()\r\n\t\t}\r\n\r\n\t\ttimer = object : CountDownTimer(6000, 1000) {\r\n\t\t\toverride fun onTick(millisUntilFinished: Long) {\r\n\t\t\t\tLog.e(\"_Timer\", \"seconds remaining: \" + millisUntilFinished / 1000)\r\n\t\t\t\tif (changeLable1 == (millisUntilFinished / 1000)) {\r\n\t\t\t\t\tbinding.searchKeyETxtAct.hint = \"Search Products\"\r\n\t\t\t\t} else if (changeLable2 == (millisUntilFinished / 1000)) {\r\n\t\t\t\t\tbinding.searchKeyETxtAct.hint = \"Search Restaurants\"\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbinding.searchKeyETxtAct.hint = \"Search Dishes\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toverride fun onFinish() {\r\n\t\t\t\ttimer!!.start()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttimer!!.start()\r\n\r\n\r\n\t\tbinding.searchKeyETxtAct.isCursorVisible= true\r\n\t\tshowKeyboard(binding.searchKeyETxtAct)\r\n\t\tonClick()\r\n\r\n\t\tonResponse()\r\n\r\n\r\n\t\tbinding.searchKeyETxtAct.setOnEditorActionListener { v, actionId, event ->\r\n\r\n\t\t\tif (actionId == EditorInfo.IME_ACTION_DONE-1){\r\n\r\n\t\t\t\tsearch_value= binding.searchKeyETxtAct.text.toString()\r\n\t\t\t\ttextchane= false\r\n\t\t\t\tsearchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n\t\t\t\thideKeyboard(binding.searchKeyETxtAct)\r\n\t\t\t}\r\n\r\n\t\t\tif (actionId== KeyEvent.KEYCODE_BACK){\r\n\t\t\t\tif (!(intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\t\t\t\t\tbinding.xyz.noItemFoundll.visibility= View.GONE\r\n\t\t\t\t\tbinding!!.xyz!!.root.visibility= View.GONE\r\n\t\t\t\t\tbinding.showingResult.visibility= View.VISIBLE\r\n\t\t\t\t\tbinding.rvSearchResult.visibility= View.VISIBLE\r\n\t\t\t\t}else if ((intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\r\n\t\t\t\t\tbinding!!.xyz2!!.root.visibility= View.GONE\r\n\t\t\t\t\tbinding.showingResult.visibility= View.VISIBLE\r\n\t\t\t\t\tbinding.rvSearchResult.visibility= View.VISIBLE\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfalse\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate fun onResponse() {\r\n\t\tviewModel!!.keywordBasedSearchSuggestionsRes!!.observe(this) {\r\n\r\n\t\t\tif (it.error_code == 200) {\r\n\t\t\t\thit = 0\r\n\t\t\t\tisMore = it.more_value\r\n\t\t\t\tlatestList!!.clear()\r\n//\t\t\t\tlatestList4= it.suggestions as ArrayList<SuggestionX>\r\n//\t\t\t\tlatestList4!!.forEach {\r\n//\t\t\t\t\tLog.d(\"checkresp\", \"${it.name + it.available}\")\r\n//\t\t\t\t}\r\n\r\n//\t\t\t\tmainList!!.clear()\r\n//\t\t\t\tlatestList2!!.clear()\r\n\t\t\t\tLog.d(\"keyword___\", Gson().toJson(it))\r\n\r\n\t\t\t\tif (search_value!!.isNotEmpty()) {\r\n\t\t\t\t\tbinding.rvSearchResult.visibility = View.VISIBLE\r\n\t\t\t\t\tbinding.showingResult.visibility = View.VISIBLE\r\n\t\t\t\t\tif (pagecount > 0) {\r\n\r\n\t\t\t\t\t\tlatestList = it.suggestions as ArrayList\r\n\r\n//\r\n\t\t\t\t\t\tif (textchane) {\r\n\t\t\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\t\ttextchane= false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (intent.getStringExtra(\"type\").equals(\"Restaurent\")){\r\n\t\t\t\t\t\t\tfor (i in 0 until latestList!!.size) {\r\n\t\t\t\t\t\t\t\tif (latestList!![i].available.equals(\"1\") && latestList!![i].type.equals(\"Restaurants\")) {\r\n\t\t\t\t\t\t\t\t\tmainList!!.add(latestList!![i])\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else {\r\n\r\n\t\t\t\t\t\t\tfor (i in 0 until latestList!!.size) {\r\n\t\t\t\t\t\t\t\tif (latestList!![i].available.equals(\"1\")) {\r\n\t\t\t\t\t\t\t\t\tmainList!!.add(latestList!![i])\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//here we remove duplicate item\r\n\t\t\t\t\t\tval s: Set<SuggestionX> = LinkedHashSet<SuggestionX>(mainList)\r\n\r\n\r\n\t\t\t\t\t//\tmainList!!.clear()\r\n\t\t\t\t\t\tmainList!!.addAll(s)\r\n\r\n\t\t\t\t\t\tif (mainList.isNullOrEmpty() && !(intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\t\t\t\t\t\t\tbinding.xyz.noItemFoundll.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding!!.xyz!!.root.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding.showingResult.visibility= View.GONE\r\n\t\t\t\t\t\t\tbinding.rvSearchResult.visibility= View.GONE\r\n\t\t\t\t\t\t}else if (mainList.isNullOrEmpty() && (intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\r\n\t\t\t\t\t\t\tbinding!!.xyz2!!.root.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding.showingResult.visibility= View.GONE\r\n\t\t\t\t\t\t\tbinding.rvSearchResult.visibility= View.GONE\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tsearchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n\t\t\t\t\t\tsearchCategoryAdapter!!.notifyDataSetChanged()\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tlatestList2 = it.suggestions as ArrayList\r\n\t\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\tif (intent.getStringExtra(\"type\").equals(\"Restaurent\")){\r\n\t\t\t\t\t\t\tfor (i in 0 until latestList2!!.size) {\r\n\t\t\t\t\t\t\t\tif (latestList2!![i].available.equals(\"1\") && latestList2!![i].type.equals(\"Restaurants\")) {\r\n\t\t\t\t\t\t\t\t\tmainList!!.add(latestList2!![i])\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else {\r\n\r\n\t\t\t\t\t\t\tfor (i in 0 until latestList2!!.size) {\r\n\t\t\t\t\t\t\t\tif (latestList2!![i].available.equals(\"1\")) {\r\n\t\t\t\t\t\t\t\t\tmainList!!.add(latestList2!![i])\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//here we remove duplicate item\r\n\t\t\t\t\t\tval s: Set<SuggestionX> = LinkedHashSet<SuggestionX>(mainList)\r\n\r\n\t\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\tmainList!!.addAll(s)\r\n\t\t\t\t\t\tif (mainList.isNullOrEmpty() && !(intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\t\t\t\t\t\t\tbinding.xyz.noItemFoundll.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding!!.xyz!!.root.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding.showingResult.visibility= View.GONE\r\n\t\t\t\t\t\t\tbinding.rvSearchResult.visibility= View.GONE\r\n\t\t\t\t\t\t}else if (mainList.isNullOrEmpty() && (intent.getStringExtra(\"type\").equals(\"Restaurent\"))){\r\n\r\n\t\t\t\t\t\t\tbinding!!.xyz2!!.root.visibility= View.VISIBLE\r\n\t\t\t\t\t\t\tbinding.showingResult.visibility= View.GONE\r\n\t\t\t\t\t\t\tbinding.rvSearchResult.visibility= View.GONE\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (text_count==0){\r\n\t\t\t\t\t\t\trvCategoryList(mainList!!)\r\n\t\t\t\t\t\t\ttext_count++\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsearchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n\t\t\t\t\t\t\tsearchCategoryAdapter!!.notifyDataSetChanged()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinding.showingResult.text =\r\n\t\t\t\t\t\t\"Showing Results (\" + mainList!!.size.toString() + \")\"\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbinding.rvSearchResult!!.visibility = View.GONE\r\n\t\t\t\t\tbinding.showingResult!!.visibility = View.GONE\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate fun rvCategoryList(arrayList: ArrayList<SuggestionX>) {\r\n\t\tsearchCategoryAdapter = SearchCategoryAdapter(\r\n\t\t\tthis,\r\n\t\t\tarrayList,\r\n\t\t\tobject : SearchCategoryAdapter.CategoryItemClick {\r\n\t\t\t\toverride fun onItemClick(pos: Int, model: SuggestionX) {\r\n\t\t\t\t\tkey_value = model.name\r\n\t\t\t\t\tLog.d(\r\n\t\t\t\t\t\t\"key_value__\",\r\n\t\t\t\t\t\tmodel.category_id + \"--\" + model.category_name + \"--\" + model.subcategory_id\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tif (model.type.equals(\"Restaurants\")) {\r\n\t\t\t\t\t\tAppUtils.startActivityRightToLeft(\r\n\t\t\t\t\t\t\tthis@NewSearchActivity,\r\n\t\t\t\t\t\t\t//Intent(this@NewSearchActivity, StoreItemsActivity::class.java)\r\n\t\t\t\t\t\t\t//Intent(this@NewSearchActivity, NewStoreItemsActivity::class.java)\r\n\t\t\t\t\t\t\tIntent(this@NewSearchActivity, NewDBStoreItemsActivity::class.java)\r\n\t\t\t\t\t\t\t\t.putExtra(\"storeId\", model.store_id)\r\n\t\t\t\t\t\t\t\t.putExtra(\"search_value\", search_value)\r\n\t\t\t\t\t\t\t\t.putExtra(\"storeName\", model.name)\r\n\t\t\t\t\t\t\t\t.putExtra(\"store_location\", model.locality)\r\n\t\t\t\t\t\t\t\t.putExtra(\"delivery_time\", model.delivery_time)\r\n\t\t\t\t\t\t\t\t.putExtra(\"cuisine_types\", model.cuisines.joinToString(separator = \", \"))\r\n\t\t\t\t\t\t\t\t.putExtra(\"coupon_desc\", \"\")\r\n\t\t\t\t\t\t\t\t.putExtra(\"distance\", model.distance)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (model.type.equals(\"Dish\")) {\r\n\t\t\t\t\t\tAppUtils.startActivityRightToLeft(\r\n\t\t\t\t\t\t\tthis@NewSearchActivity,\r\n\t\t\t\t\t\t\tIntent(\r\n\t\t\t\t\t\t\t\tthis@NewSearchActivity,\r\n\t\t\t\t\t\t\t\tNewSearchStoreListingActivity::class.java\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.putExtra(\"storeId\", model.store_id)\r\n\t\t\t\t\t\t\t\t.putExtra(\"search_value\", search_value)\r\n\t\t\t\t\t\t\t\t.putExtra(\"key_value\", key_value)\r\n\t\t\t\t\t\t\t\t.putExtra(\"storeName\", model.name)\r\n\t\t\t\t\t\t\t\t.putExtra(\"store_location\", model.locality)\r\n\t\t\t\t\t\t\t\t.putExtra(\"delivery_time\", model.delivery_time)\r\n\t\t\t\t\t\t\t\t.putExtra(\"cuisine_types\", model.cuisines.joinToString(separator = \", \"))\r\n\t\t\t\t\t\t\t\t.putExtra(\"coupon_desc\", \"\")\r\n\t\t\t\t\t\t\t\t.putExtra(\"distance\", model.distance)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (model.type.equals(\"Grocery\") || model.type.equals(\"Medicine\")|| model.type.equals(\"Pet Essentials\")) {\r\n\t\t\t\t\t\tAppUtils.startActivityRightToLeft(\r\n\t\t\t\t\t\t\tthis@NewSearchActivity,\r\n\t\t\t\t\t\t\tIntent(this@NewSearchActivity, CategoryProductListActivity::class.java)\r\n\t\t\t\t\t\t\t\t.putExtra(\"search_value\", search_value)\r\n\t\t\t\t\t\t\t\t.putExtra(\"category_id\", model.category_id)\r\n\t\t\t\t\t\t\t\t.putExtra(\"subCategory_id\", model.subcategory_id)\r\n\t\t\t\t\t\t\t\t.putExtra(\"category_name\", model.category_name)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tbinding.rvSearchResult!!.adapter = searchCategoryAdapter\r\n\t\tbinding.rvSearchResult!!.layoutManager = manager\r\n\t\tbinding.rvSearchResult!!.addOnScrollListener(object : RecyclerView.OnScrollListener() {\r\n\r\n\t\t\toverride fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int) {\r\n\t\t\t\tsuper.onScrollStateChanged(recyclerView, newState)\r\n\t\t\t\tif (newState == AbsListView.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL) {\r\n\t\t\t\t\tisScrolling = true\r\n\t\t\t\t\ttextchane= false\r\n\t\t\t\t\t// StoreItemsActivity.handleresponce = 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toverride fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {\r\n\t\t\t\tsuper.onScrolled(recyclerView, dx, dy)\r\n\t\t\t\tcurrentItems = manager!!.childCount\r\n\t\t\t\ttotalItems = manager!!.itemCount\r\n\t\t\t\tscrollOutItems = manager!!.findFirstVisibleItemPosition()\r\n\r\n\t\t\t\tvar firstVisibleItem = manager!!.findFirstCompletelyVisibleItemPosition()\r\n\r\n\t\t\t\tif (dy > 1) {\r\n\t\t\t\t\tif (isScrolling && currentItems + scrollOutItems == totalItems) {\r\n\t\t\t\t\t\tLog.d(\"totalItem___\", table_count.toString() + \"---\" + firstVisibleItem)\r\n\r\n\t\t\t\t\t\tif (isScrolling) {\r\n\t\t\t\t\t\t\tif (sessionTwiclo!!.isLoggedIn) {\r\n\t\t\t\t\t\t\t\tif (isMore) {\r\n\t\t\t\t\t\t\t\t\tif (hit == 0) {\r\n\t\t\t\t\t\t\t\t\t\tpagecount++\r\n\t\t\t\t\t\t\t\t\t\tviewModel!!.keywordBasedSearchSuggestionsApi(\r\n\t\t\t\t\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accountId,\r\n\t\t\t\t\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accessToken,\r\n\t\t\t\t\t\t\t\t\t\t\tsearch_value!!,\r\n\t\t\t\t\t\t\t\t\t\t\tsessionTwiclo!!.userLat,\r\n\t\t\t\t\t\t\t\t\t\t\tsessionTwiclo!!.userLng,\r\n\t\t\t\t\t\t\t\t\t\t\tpagecount.toString(), service_id!!\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\thit = 1\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tisScrolling = false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tprivate fun onClick() {\r\n\r\n\r\n\r\n\t\tbinding.searchKeyETxtAct.addTextChangedListener(object : TextWatcher {\r\n\r\n\t\t\toverride fun afterTextChanged(s: Editable) {}\r\n\r\n\t\t\toverride fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {\r\n\t\t\t\tbinding.editTxtAct.setTextColor(resources.getColor(R.color.colorTextGray))\r\n\r\n\r\n\t\t\t\tbinding!!.xyz2!!.root.visibility= View.GONE\r\n\t\t\t\t\tbinding.xyz.noItemFoundll.visibility= View.GONE\r\n\t\t\t\t\tbinding!!.xyz!!.root.visibility= View.GONE\r\n\t\t\t\tbinding.showingResult.visibility= View.VISIBLE\r\n\t\t\t\tbinding.rvSearchResult.visibility= View.VISIBLE\r\n\t\t\t}\r\n\r\n\t\t\t@SuppressLint(\"NotifyDataSetChanged\")\r\n\t\t\toverride fun onTextChanged(\r\n\t\t\t\ts: CharSequence, start: Int,\r\n\t\t\t\tbefore: Int, count: Int\r\n\t\t\t) {\r\n\r\n\t\t\t\ttextchane= true\r\n\r\n\t\t\t\tsearch_value = s.toString()\r\n\t\t\t\t//binding.editTxtAct.setTextColor(resources.getColor(R.color.black))\r\n\t\t\t\t//  recentSearch!!.add(search_value!!)\r\n\t\t\t\t//   Log.d(\"dsscountfff\", \"$start$count\")\r\n\r\n\t\t\t\tif (count==0){\r\n\t\t\t\t\tbinding.editTxtAct.setTextColor(resources.getColor(R.color.colorTextGray))\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbinding.editTxtAct.setTextColor(resources.getColor(R.color.black))\r\n\t\t\t\t}\r\n\t\t\t\tif (count < 1) {\r\n\t\t\t\t\tpage_count = 0\r\n\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\tbinding.showingResult.text = \"Showing Results\"\r\n\t\t\t\t\tsearchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n\t\t\t\t\tsearchCategoryAdapter!!.notifyDataSetChanged()\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\tif (search_value!!.isNotEmpty()) {\r\n\t\t\t\t\tbinding.rvSearchResult!!.visibility=View.VISIBLE\r\n\t\t\t\t\tif (sessionTwiclo!!.isLoggedIn) {\r\n\t\t\t\t\t\tviewModel!!.keywordBasedSearchSuggestionsApi(\r\n\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accountId,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accessToken,\r\n\t\t\t\t\t\t\tsearch_value!!,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.userLat,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.userLng,\r\n\t\t\t\t\t\t\tpage_count.toString(), service_id!!\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (sessionTwiclo!!.userLat.isNotEmpty()) {\r\n\t\t\t\t\t\t\tpage_count = 0\r\n\t\t\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\t\tbinding.showingResult.text = \"Showing Results\"\r\n//                            searchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n//                            searchCategoryAdapter!!.notifyDataSetChanged()\r\n//\r\n\t\t\t\t\t\t\tviewModel!!.keywordBasedSearchSuggestionsApi(\r\n\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\tsearch_value!!,\r\n\t\t\t\t\t\t\t\tsessionTwiclo!!.userLat,\r\n\t\t\t\t\t\t\t\tsessionTwiclo!!.userLng,\r\n\t\t\t\t\t\t\t\tpage_count.toString(), service_id!!\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbinding.rvSearchResult!!.visibility=View.GONE\r\n\r\n\t\t\t\t\tif (sessionTwiclo!!.isLoggedIn) {\r\n\t\t\t\t\t\tviewModel!!.keywordBasedSearchSuggestionsApi(\r\n\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accountId,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.loggedInUserDetail.accessToken,\r\n\t\t\t\t\t\t\tsearch_value!!,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.userLat,\r\n\t\t\t\t\t\t\tsessionTwiclo!!.userLng,\r\n\t\t\t\t\t\t\tpage_count.toString(), service_id!!\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (sessionTwiclo!!.userLat.isNotEmpty()) {\r\n\t\t\t\t\t\t\tpage_count = 0\r\n\t\t\t\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\t\tbinding.showingResult.text = \"Showing Results\"\r\n//                            searchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n//                            searchCategoryAdapter!!.notifyDataSetChanged()\r\n//\r\n\t\t\t\t\t\t\tviewModel!!.keywordBasedSearchSuggestionsApi(\r\n\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\tsearch_value!!,\r\n\t\t\t\t\t\t\t\tsessionTwiclo!!.userLat,\r\n\t\t\t\t\t\t\t\tsessionTwiclo!!.userLng,\r\n\t\t\t\t\t\t\t\tpage_count.toString(), service_id!!\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tLog.d(\"search_value___\", search_value.toString())\r\n\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\r\n\t\tbinding.editTxtAct.setOnClickListener {\r\n\t\t\ttry {\r\n\t\t\t\tmainList!!.clear()\r\n\t\t\t\t\t\t\t//hideKeyboard(binding.searchKeyETxtAct)\r\n\t\t\t\tbinding.showingResult.text = \"Showing Result\"\r\n\t\t\t\tsearchCategoryAdapter!!.updateData(mainList!!, isMore)\r\n\t\t\t\tsearchCategoryAdapter!!.notifyDataSetChanged()\r\n\t\t\t\tbinding.searchKeyETxtAct.text.clear()\r\n\t\t\t\tbinding.editTxtAct.setTextColor(resources.getColor(R.color.colorTextGray))\r\n\t\t\t} catch (e: Exception) {\r\n\t\t\t\te.printStackTrace()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbinding.backIconBtn.setOnClickListener { AppUtils.finishActivityLeftToRight(this) }\r\n\t}\r\n\r\n\toverride fun onExploreCatClick(outerPosition: Int?, innerPosition: Int?, model: Service) {}\r\n\r\n\toverride fun onCurationCatClick(outerPosition: Int?, innerPosition: Int?, model: Curation) {}\r\n\r\n\toverride fun onPackageCatClick(\r\n\t\touterPosition: Int?,\r\n\t\tinnerPosition: Int?,\r\n\t\tmodel: PackageCategory\r\n\t) {\r\n\t}\r\n\r\n\toverride fun onOfferCatClick(outerPosition: Int?, innerPosition: Int?, model: Offer) {}\r\n\r\n\toverride fun onShopCatClick(outerPosition: Int?, innerPosition: Int?, model: ShopCategory) {}\r\n\r\n\toverride fun onUpcomingServicesClick(\r\n\t\touterPosition: Int?,\r\n\t\tinnerPosition: Int?,\r\n\t\tmodel: UpcomingServices\r\n\t) {\r\n\t}\r\n\r\n\toverride fun onResume() {\r\n\t\tsuper.onResume()\r\n\t\tdeleteRoomDataBase()\r\n\t}\r\n\r\n\t//delete room data\r\n\tprivate fun deleteRoomDataBase() {\r\n\t\tThread {\r\n\t\t\trestaurantProductsDatabase = Room.databaseBuilder(\r\n\t\t\t\tapplicationContext,\r\n\t\t\t\tRestaurantProductsDatabase::class.java, RestaurantProductsDatabase.DB_NAME\r\n\t\t\t)\r\n\t\t\t\t.fallbackToDestructiveMigration()\r\n\t\t\t\t.build()\r\n\t\t\trestaurantProductsDatabase!!.resProductsDaoAccess()!!.deleteAll()\r\n\r\n\t\t}.start()\r\n\r\n\t}\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/fidoo/user/newsearch/ui/NewSearchActivity.kt b/app/src/main/java/com/fidoo/user/newsearch/ui/NewSearchActivity.kt
--- a/app/src/main/java/com/fidoo/user/newsearch/ui/NewSearchActivity.kt	(revision e7e61d84114064ff9a8f8f4043518228d2e3a54d)
+++ b/app/src/main/java/com/fidoo/user/newsearch/ui/NewSearchActivity.kt	(date 1654612402796)
@@ -9,7 +9,6 @@
 import android.text.Editable
 import android.text.TextWatcher
 import android.util.Log
-import android.view.KeyEvent
 import android.view.View
 import android.view.inputmethod.EditorInfo
 import com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory.executor
@@ -135,20 +134,6 @@
 				searchCategoryAdapter!!.updateData(mainList!!, isMore)
 				hideKeyboard(binding.searchKeyETxtAct)
 			}
-
-			if (actionId== KeyEvent.KEYCODE_BACK){
-				if (!(intent.getStringExtra("type").equals("Restaurent"))){
-					binding.xyz.noItemFoundll.visibility= View.GONE
-					binding!!.xyz!!.root.visibility= View.GONE
-					binding.showingResult.visibility= View.VISIBLE
-					binding.rvSearchResult.visibility= View.VISIBLE
-				}else if ((intent.getStringExtra("type").equals("Restaurent"))){
-
-					binding!!.xyz2!!.root.visibility= View.GONE
-					binding.showingResult.visibility= View.VISIBLE
-					binding.rvSearchResult.visibility= View.VISIBLE
-				}
-			}
 			false
 		}
 	}
@@ -208,12 +193,12 @@
 					//	mainList!!.clear()
 						mainList!!.addAll(s)
 
-						if (mainList.isNullOrEmpty() && !(intent.getStringExtra("type").equals("Restaurent"))){
+						if (mainList!!.size==0 && !(intent.getStringExtra("type").equals("Restaurent"))){
 							binding.xyz.noItemFoundll.visibility= View.VISIBLE
 							binding!!.xyz!!.root.visibility= View.VISIBLE
 							binding.showingResult.visibility= View.GONE
 							binding.rvSearchResult.visibility= View.GONE
-						}else if (mainList.isNullOrEmpty() && (intent.getStringExtra("type").equals("Restaurent"))){
+						}else if (mainList!!.size==0 && (intent.getStringExtra("type").equals("Restaurent"))){
 
 							binding!!.xyz2!!.root.visibility= View.VISIBLE
 							binding.showingResult.visibility= View.GONE
@@ -249,12 +234,12 @@
 
 						mainList!!.clear()
 						mainList!!.addAll(s)
-						if (mainList.isNullOrEmpty() && !(intent.getStringExtra("type").equals("Restaurent"))){
+						if (mainList!!.size==0 && !(intent.getStringExtra("type").equals("Restaurent"))){
 							binding.xyz.noItemFoundll.visibility= View.VISIBLE
 							binding!!.xyz!!.root.visibility= View.VISIBLE
 							binding.showingResult.visibility= View.GONE
 							binding.rvSearchResult.visibility= View.GONE
-						}else if (mainList.isNullOrEmpty() && (intent.getStringExtra("type").equals("Restaurent"))){
+						}else if (mainList!!.size==0 && (intent.getStringExtra("type").equals("Restaurent"))){
 
 							binding!!.xyz2!!.root.visibility= View.VISIBLE
 							binding.showingResult.visibility= View.GONE
@@ -277,7 +262,6 @@
 					binding.showingResult!!.visibility = View.GONE
 				}
 			}
-
 		}
 	}
 
