Index: app/src/main/java/com/fidoo/user/chatbot/adapter/ChatBotAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fidoo.user.chatbot.adapter\r\n\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.animation.AnimationUtils\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.fidoo.user.R\r\nimport com.fidoo.user.databinding.BotitemlayoutBinding\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\n\r\n\r\nclass TestAdapter(val context: Context, var datalist:List<String>) : RecyclerView.Adapter<ResponseViewHolder>() {\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ResponseViewHolder {\r\n        val itemLayoutBinding = BotitemlayoutBinding.inflate(LayoutInflater.from(parent.context),parent,false)\r\n        return ResponseViewHolder(itemLayoutBinding)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ResponseViewHolder, position: Int) {\r\n        val model = datalist[position]\r\n        var count = datalist.size\r\n        holder.itemLayoutBinding.apply {\r\n            cardbotlayout.visibility = View.GONE\r\n            CoroutineScope(Dispatchers.Main).launch {\r\n                delay(position * 450L)\r\n                Glide.with(context).asGif().load(R.drawable.typing).into(loadingGifChat)\r\n                delay(position*300L)\r\n                val animationFadeIn = AnimationUtils.loadAnimation(context, R.anim.fade_in)\r\n                tvTitle.startAnimation(animationFadeIn)\r\n                tvTitle.text = model\r\n                loadingGifChat.visibility = View.GONE\r\n                cardbotlayout.visibility = View.VISIBLE\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return datalist.size\r\n    }\r\n}\r\nclass ResponseViewHolder(val itemLayoutBinding: BotitemlayoutBinding) : RecyclerView.ViewHolder(itemLayoutBinding.root)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/fidoo/user/chatbot/adapter/ChatBotAdapter.kt b/app/src/main/java/com/fidoo/user/chatbot/adapter/ChatBotAdapter.kt
--- a/app/src/main/java/com/fidoo/user/chatbot/adapter/ChatBotAdapter.kt	(revision 372c3bc4edac315eaa0ef5fe17ba01119eb151e7)
+++ b/app/src/main/java/com/fidoo/user/chatbot/adapter/ChatBotAdapter.kt	(date 1647347409038)
@@ -28,11 +28,15 @@
             cardbotlayout.visibility = View.GONE
             CoroutineScope(Dispatchers.Main).launch {
                 delay(position * 450L)
-                Glide.with(context).asGif().load(R.drawable.typing).into(loadingGifChat)
-                delay(position*300L)
                 val animationFadeIn = AnimationUtils.loadAnimation(context, R.anim.fade_in)
                 tvTitle.startAnimation(animationFadeIn)
                 tvTitle.text = model
+//                Glide.with(context).asGif().load(R.drawable.typing).into(loadingGifChat)
+                delay(position*300L)
+//                val animationFadeIn = AnimationUtils.loadAnimation(context, R.anim.fade_in)
+//                tvTitle.startAnimation(animationFadeIn)
+//                tvTitle.text = model
+                Glide.with(context).asGif().load(R.drawable.typing).into(loadingGifChat)
                 loadingGifChat.visibility = View.GONE
                 cardbotlayout.visibility = View.VISIBLE
             }
